***********************************************************************
*
*	CODE GENERATION LISTING FOR: Alkin W32 Compressor Control
*	COMPILER VERSION: 5.22.0.18
*
***********************************************************************

**************************************************
	CODE GENERATOR SUBROUTINES
**************************************************

$$MOD:
300000B0  FB90 F3F1		sdiv r3, r0, r1
300000B4  4359     		mul r1, r1, r3
300000B6  EBC1 0000		rsb r0, r1, r0
300000BA  4770     		bx lr

$$MOD_U:
300000BC  FBB0 F3F1		udiv r3, r0, r1
300000C0  4359     		mul r1, r1, r3
300000C2  EBC1 0000		rsb r0, r1, r0
300000C6  4770     		bx lr

**************************************************
	List function block: TON
**************************************************

FUNCTION_BLOCK TON

	{ DE:"<HTML>The TON block produces a delayed output Q of the input IN. The delay time is expressed in milliseconds on the PT input.</br></br>
<img src= tonscheme.png>
<ul>
<li>if IN is FALSE Q is false</li>
<li>Q becomes TRUE as IN remains TRUE for PT milliseconds</li>
<li>Q remains TRUE until IN remains TRUE</li>
</ul>" }

        VAR_INPUT
IN : BOOL;	{ DE:"Timer input source" }
PT : UDINT;	{ DE:"Preset time value (ms)" }
	END_VAR

        VAR_OUTPUT
Q : BOOL;	{ DE:"Timer output" }
ET : UDINT;	{ DE:"Timer current value (ms)" }
	END_VAR

        VAR_EXTERNAL
	{G:"System_Timers"}
sysTimer AT %MD60000.0 : UDINT;	{ DE:"System timer [ms]" }
	END_VAR

        VAR
timStart : UDINT;	{ DE:"Time value at start of counting" }
	END_VAR

END_FUNCTION_BLOCK

300000C8  E92D 4040		stmdb sp!, { r6, lr }
300000CC  462E     		mov r6, r5

#0		{SRC:TON}
#1		
#2			(*	Check if in counting	*)
#3		
#4			LD		IN
(-) UNDEF
300000CE  7930     		ldrb r0, [r6, #4]

#5			JMPCN	lReset
(-) BOOL
300000D0  2800     		cmp r0, #0
300000D2  D025     		beq #74 ; 0x30000120


#6		
#7			(*	Check if Q is TRUE *)
#8			LD		Q
(-) UNDEF
300000D6  7B30     		ldrb r0, [r6, #12]

#9			RETC
#10			
(-) BOOL
300000D8  2800     		cmp r0, #0
300000DA  D126     		bne #76 ; 0x3000012A


#11			(*	Check if already in counting *)
#12			LD		timStart
(-) UNDEF
300000DE  6830     		ldr r0, [r6]

#13			EQ		0
(*) UDINT
300000E0  2800     		cmp r0, #0
300000E2  BF18 2000		nemov r0, #0
300000E6  BF08 2001		eqmov r0, #1

#14			JMPCN	lUpdate
(-) BOOL
300000EA  2800     		cmp r0, #0
300000EC  D004     		beq #8 ; 0x300000F8


#15		
#16			(*	Start of counting *)
#17			LD		sysTimer
(*) UNDEF
300000F0  F8DF 703C		ldr r7, [pc, #+60] ; 0x2403C680
300000F4  6838     		ldr r0, [r7]

#18			ST		timStart
(-) UDINT
300000F6  6030     		str r0, [r6]

#19			
#20		lUpdate:
#21		
#22			(*	Update timer and check if time elapsed *)
#23			LD		sysTimer
(*) UNDEF
300000F8  F8DF 7034		ldr r7, [pc, #+52] ; 0x2403C680
300000FC  6838     		ldr r0, [r7]

#24			SUB		timStart
(*) UDINT
300000FE  6837     		ldr r7, [r6]
30000100  1BC0     		sub r0, r0, r7

#25			ST		ET
(-) UDINT
30000102  6130     		str r0, [r6, #16]

#26			GE		PT
(*) UDINT
30000104  68B7     		ldr r7, [r6, #8]
30000106  42B8     		cmp r0, r7
30000108  BF38 2000		lomov r0, #0
3000010C  BF28 2001		hsmov r0, #1

#27			ST		Q
(-) BOOL
30000110  7330     		strb r0, [r6, #12]

#28			RETCN
#29		
(-) BOOL
30000112  2800     		cmp r0, #0
30000114  D009     		beq #18 ; 0x3000012A


#30			(*	Limit actual time value *)
#31			LD		PT
(-) UNDEF
30000118  68B0     		ldr r0, [r6, #8]

#32			ST		ET
(-) UDINT
3000011A  6130     		str r0, [r6, #16]

#33			RET
#34		
(-) UDINT
3000011C  E005     		b #10 ; 0x3000012A


#35		lReset:
#36		
#37			(*	Reset status *)
#38			LD		0
(-) UNDEF
30000120  2000     		mov r0, #0 ; 0

#39			ST		ET
(-) USINT
30000122  6130     		str r0, [r6, #16]

#40			ST		timStart
(-) UDINT
30000124  6030     		str r0, [r6]

#41			LD		FALSE
(-) UNDEF
30000126  2000     		mov r0, #0 ; 0

#42			ST		Q
(-) BOOL
30000128  7330     		strb r0, [r6, #12]

3000012A  E8BD 4040		ldmia sp!, { r6, lr }

3000012E  4770     		bx lr

30000130  FFFFFFFF		; 0x2403C680


Frame allocation:

	0000       : VAR timStart
	0004 bit  0: VAR IN
	0008       : VAR PT
	000C bit  0: VAR Q
	0010       : VAR ET

END_FUNCTION_BLOCK
**************************************************
	List program: main
**************************************************

PROGRAM main

END_PROGRAM

30000140  B082     		sub sp, sp, #8
30000142  F8CD E000		str lr, [sp]
30000146  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

#0		{SRC:main}
#1		(*$WAITSWITCH$*)
#2		
#3			(* cnt := cnt + 1; *)
#4			LD		cnt	{LNXT:2|2|-1}
(*) UNDEF
3000014A  F8DF 7010		ldr r7, [pc, #+16] ; 0x24002C4C
3000014E  F9B7 0000		ldrsh r0, [r7]

#5			ADD		1	{LNXT:2|2|-1}
(-) INT
30000152  1C40     		add r0, r0, #1

#6			ST		cnt	{LNXT:2|2|-1}
(*) INT
30000154  F8DF 7004		ldr r7, [pc, #+4] ; 0x24002C4C
30000158  8038     		strh r0, [r7]

3000015A  E001     		b #2

3000015C  24002C4C		; 0x24002C4C

END_PROGRAM
**************************************************
	List program: Ladder
**************************************************

PROGRAM Ladder

        VAR
Low_Oil_Fault : BOOL;
Motor_OL_Fault : BOOL;
Motor_Temp_Fault : BOOL;
E_Stop_Fault : BOOL;
ACD_Cycle_Start : TON;	{ DE:"ACD Cycle" }
ACD_Vent_Open : TON;	{ DE:"ACD Vent Open" }
Oil_Pres_Delay : TON;
Flash : BOOL;
Motor_Standby : BOOL;
Flasher : TON;
Flasher_Off : TON;
Blink_Rate : UINT;
Fault_Mode : BOOL;
Shutdown_Reset : TON;
	END_VAR

        VAR CONSTANT
ACD_Open : INT := 30000;	{ DE:"Duration of ACD Venting (ms)" }
ACD_Cycle : UDINT := 900000;	{ DE:"Duration of ACD Vent Cycle (ms)" }
	END_VAR

END_PROGRAM

#0			{SRC:Ladder}
#1		 
#2		  
#3			(* Network 1 *)
#4		Fill_Cycle:
#5			LD		START {R:1$17}
(*) UNDEF
30000160  F8DF 751C		ldr r7, [pc, #+1308] ; 0x2403D74A
30000164  7838     		ldrb r0, [r7]

#6			OR		MOTOR {R:1$110}
(*) BOOL
30000166  F8DF 7534		ldr r7, [pc, #+1332] ; 0x2403D759
3000016A  783F     		ldrb r7, [r7]
3000016C  4338     		orr r0, r0, r7

#7			OR		MOTOR_STANDBY {R:1$114}
(*) BOOL
3000016E  F8DF 7470		ldr r7, [pc, #+1136] ; 0x24002BC7
30000172  783F     		ldrb r7, [r7]
30000174  4338     		orr r0, r0, r7

#8			AND		EMERGENCY_STOP {R:1$95}
(*) BOOL
30000176  F8DF 750C		ldr r7, [pc, #+1292] ; 0x2403D74C
3000017A  783F     		ldrb r7, [r7]
3000017C  4038     		and r0, r0, r7

#9			AND		STOP {R:1$98}
(*) BOOL
3000017E  F8DF 74FC		ldr r7, [pc, #+1276] ; 0x2403D748
30000182  783F     		ldrb r7, [r7]
30000184  4038     		and r0, r0, r7

#10			ANDN		PRESSURE_SENSOR {R:1$108}
(*) BOOL
30000186  F8DF 7500		ldr r7, [pc, #+1280] ; 0x2403D74E
3000018A  783F     		ldrb r7, [r7]
3000018C  2F00     		cmp r7, #0
3000018E  BF08 2701		eqmov r7, #1
30000192  BF18 2700		nemov r7, #0
30000196  4038     		and r0, r0, r7

#11			ANDN		LOW_OIL_FAULT {R:1$77}
(*) BOOL
30000198  F8DF 7440		ldr r7, [pc, #+1088] ; 0x24002BC6
3000019C  783F     		ldrb r7, [r7]
3000019E  2F00     		cmp r7, #0
300001A0  BF08 2701		eqmov r7, #1
300001A4  BF18 2700		nemov r7, #0
300001A8  4038     		and r0, r0, r7

#12			ANDN		MOTOR_OL_FAULT {R:1$91}
(*) BOOL
300001AA  F8DF 7438		ldr r7, [pc, #+1080] ; 0x24002BCC
300001AE  783F     		ldrb r7, [r7]
300001B0  2F00     		cmp r7, #0
300001B2  BF08 2701		eqmov r7, #1
300001B6  BF18 2700		nemov r7, #0
300001BA  4038     		and r0, r0, r7

#13			ANDN		MOTOR_TEMP_FAULT {R:1$92}
(*) BOOL
300001BC  F8DF 7428		ldr r7, [pc, #+1064] ; 0x24002BCD
300001C0  783F     		ldrb r7, [r7]
300001C2  2F00     		cmp r7, #0
300001C4  BF08 2701		eqmov r7, #1
300001C8  BF18 2700		nemov r7, #0
300001CC  4038     		and r0, r0, r7

#14			ST		MOTOR {R:1$1}
(*) BOOL
300001CE  F8DF 74CC		ldr r7, [pc, #+1228] ; 0x2403D759
300001D2  7038     		strb r0, [r7]

#15		 
#16			(* Network 2 *)
#17		Condensate:
#18			LD		MOTOR {R:2$178}
(*) UNDEF
300001D4  F8DF 74C4		ldr r7, [pc, #+1220] ; 0x2403D759
300001D8  7838     		ldrb r0, [r7]

#19			ANDN		ACD {R:2$179}
(*) BOOL
300001DA  F8DF 74C4		ldr r7, [pc, #+1220] ; 0x2403D75A
300001DE  783F     		ldrb r7, [r7]
300001E0  2F00     		cmp r7, #0
300001E2  BF08 2701		eqmov r7, #1
300001E6  BF18 2700		nemov r7, #0
300001EA  4038     		and r0, r0, r7

#20			ST		ACD_CYCLE_START.IN {R:2$119}
(*) BOOL
300001EC  F8DF 7404		ldr r7, [pc, #+1028] ; 0x24002BD4
300001F0  7038     		strb r0, [r7]

#21			MOVE		ACD_CYCLE,ACD_CYCLE_START.PT {R:2$119}
(*) BOOL
300001F2  F8DF 73E4		ldr r7, [pc, #+996] ; 0xDBBA0
300001F6  4638     		mov r0, r7
300001F8  F8DF 73FC		ldr r7, [pc, #+1020] ; 0x24002BD8
300001FC  6038     		str r0, [r7]

#22			CAL		ACD_CYCLE_START {R:2$119}
(*) UDINT
300001FE  E92D 0021		stmdb sp!, { r0, r5 }
30000202  F8DF 53EC		ldr r5, [pc, #+1004] ; 0x24002BD0
30000206  F8DF 44A4		ldr r4, [pc, #+1188] ; 0x300000C8
3000020A  F044 0401		orr r4, r4, #1
3000020E  47A0     		blx r4
30000210  E8BD 0021		ldmia sp!, { r0, r5 }

#23			LD		ACD_CYCLE_START.Q {R:2$119}
(*) UNDEF
30000214  F8DF 73E4		ldr r7, [pc, #+996] ; 0x24002BDC
30000218  7838     		ldrb r0, [r7]

#24			S		ACD {R:2$54}
(*) BOOL
3000021A  2800     		cmp r0, #0
3000021C  D009     		beq #0x000012
3000021E  B082     		sub sp, sp, #8
30000220  F8CD 0000		str r0, [sp]
30000224  2001     		mov r0, #1
30000226  F8DF 7478		ldr r7, [pc, #+1144] ; 0x2403D75A
3000022A  7038     		strb r0, [r7]
3000022C  F8DD 0000		ldr r0, [sp]
30000230  B002     		add sp, sp, #8

#25		 
#26			(* Network 3 *)
#27		Condensate_Vent:
#28			LD		MOTOR {R:3$175}
(*) UNDEF
30000232  F8DF 7468		ldr r7, [pc, #+1128] ; 0x2403D759
30000236  7838     		ldrb r0, [r7]

#29			AND		ACD {R:3$176}
(*) BOOL
30000238  F8DF 7464		ldr r7, [pc, #+1124] ; 0x2403D75A
3000023C  783F     		ldrb r7, [r7]
3000023E  4038     		and r0, r0, r7

#30			ST		ACD_VENT_OPEN.IN {R:3$135}
(*) BOOL
30000240  F8DF 73C0		ldr r7, [pc, #+960] ; 0x24002BE8
30000244  7038     		strb r0, [r7]

#31			MOVE		ACD_OPEN,ACD_VENT_OPEN.PT {R:3$135}
(*) BOOL
30000246  F8DF 738C		ldr r7, [pc, #+908] ; 0x7530
3000024A  4638     		mov r0, r7
3000024C  F8DF 73B8		ldr r7, [pc, #+952] ; 0x24002BEC
30000250  6038     		str r0, [r7]

#32			CAL		ACD_VENT_OPEN {R:3$135}
(*) UDINT
30000252  E92D 0021		stmdb sp!, { r0, r5 }
30000256  F8DF 53A8		ldr r5, [pc, #+936] ; 0x24002BE4
3000025A  F8DF 4450		ldr r4, [pc, #+1104] ; 0x300000C8
3000025E  F044 0401		orr r4, r4, #1
30000262  47A0     		blx r4
30000264  E8BD 0021		ldmia sp!, { r0, r5 }

#33			LD		ACD_VENT_OPEN.Q {R:3$135}
(*) UNDEF
30000268  F8DF 73A0		ldr r7, [pc, #+928] ; 0x24002BF0
3000026C  7838     		ldrb r0, [r7]

#34			R		ACD {R:3$62}
(*) BOOL
3000026E  2800     		cmp r0, #0
30000270  D009     		beq #0x000012
30000272  B082     		sub sp, sp, #8
30000274  F8CD 0000		str r0, [sp]
30000278  2000     		mov r0, #0
3000027A  F8DF 7424		ldr r7, [pc, #+1060] ; 0x2403D75A
3000027E  7038     		strb r0, [r7]
30000280  F8DD 0000		ldr r0, [sp]
30000284  B002     		add sp, sp, #8

#35		 
#36			(* Network 4 *)
#37		Motor_Overload:
#38			LD		MOTOR_OL {R:4$19}
(*) UNDEF
30000286  F8DF 740C		ldr r7, [pc, #+1036] ; 0x2403D754
3000028A  7838     		ldrb r0, [r7]

#39			JMPCN	$$LAB$1
(-) BOOL
3000028C  2800     		cmp r0, #0
3000028E  D005     		beq #10 ; 0x3000029C


#40			LD		300 {R:4$89}
(*) UNDEF
30000292  F44F 7096		mov r0, #300 ; 300

#41			ST		BLINK_RATE {R:4$88}
(*) UINT
30000296  F8DF 7354		ldr r7, [pc, #+852] ; 0x24002BCE
3000029A  8038     		strh r0, [r7]

#42		$$LAB$1:
#43			LD		MOTOR_OL
(*) UNDEF
3000029C  F8DF 73F4		ldr r7, [pc, #+1012] ; 0x2403D754
300002A0  7838     		ldrb r0, [r7]

#44			S		MOTOR_OL_FAULT {R:4$80}
(*) BOOL
300002A2  2800     		cmp r0, #0
300002A4  D009     		beq #0x000012
300002A6  B082     		sub sp, sp, #8
300002A8  F8CD 0000		str r0, [sp]
300002AC  2001     		mov r0, #1
300002AE  F8DF 7334		ldr r7, [pc, #+820] ; 0x24002BCC
300002B2  7038     		strb r0, [r7]
300002B4  F8DD 0000		ldr r0, [sp]
300002B8  B002     		add sp, sp, #8

#45		 
#46			(* Network 5 *)
#47		E_Stop:
#48			LDN		EMERGENCY_STOP {R:5$19}
(*) UNDEF
300002BA  F8DF 73C8		ldr r7, [pc, #+968] ; 0x2403D74C
300002BE  7838     		ldrb r0, [r7]
300002C0  2800     		cmp r0, #0
300002C2  BF08 2001		eqmov r0, #1
300002C6  BF18 2000		nemov r0, #0

#49			ST		$$VAR$1
(*) BOOL
300002CA  F8DF 7344		ldr r7, [pc, #+836] ; 0x24002BF8
300002CE  7038     		strb r0, [r7]

#50			JMPCN	$$LAB$2
(-) BOOL
300002D0  2800     		cmp r0, #0
300002D2  D006     		beq #12 ; 0x300002E2


#51			LD		10000 {R:5$89}
(*) UNDEF
300002D6  F8DF 72F8		ldr r7, [pc, #+760] ; 0x2710
300002DA  4638     		mov r0, r7

#52			ST		BLINK_RATE {R:5$88}
(*) UINT
300002DC  F8DF 730C		ldr r7, [pc, #+780] ; 0x24002BCE
300002E0  8038     		strh r0, [r7]

#53		$$LAB$2:
#54			LD		$$VAR$1
(*) UNDEF
300002E2  F8DF 732C		ldr r7, [pc, #+812] ; 0x24002BF8
300002E6  7838     		ldrb r0, [r7]

#55		 
#56			(* Network 6 *)
#57		Motor_Temp:
#58			LD		TEMP_SENSOR {R:6$19}
(*) UNDEF
300002E8  F8DF 73A4		ldr r7, [pc, #+932] ; 0x2403D752
300002EC  7838     		ldrb r0, [r7]

#59			JMPCN	$$LAB$3
(-) BOOL
300002EE  2800     		cmp r0, #0
300002F0  D005     		beq #10 ; 0x300002FE


#60			LD		2000 {R:6$89}
(*) UNDEF
300002F4  F44F 60FA		mov r0, #2000 ; 2000

#61			ST		BLINK_RATE {R:6$88}
(*) UINT
300002F8  F8DF 72F0		ldr r7, [pc, #+752] ; 0x24002BCE
300002FC  8038     		strh r0, [r7]

#62		$$LAB$3:
#63			LD		TEMP_SENSOR
(*) UNDEF
300002FE  F8DF 7390		ldr r7, [pc, #+912] ; 0x2403D752
30000302  7838     		ldrb r0, [r7]

#64			S		MOTOR_TEMP_FAULT {R:6$80}
(*) BOOL
30000304  2800     		cmp r0, #0
30000306  D009     		beq #0x000012
30000308  B082     		sub sp, sp, #8
3000030A  F8CD 0000		str r0, [sp]
3000030E  2001     		mov r0, #1
30000310  F8DF 72D4		ldr r7, [pc, #+724] ; 0x24002BCD
30000314  7038     		strb r0, [r7]
30000316  F8DD 0000		ldr r0, [sp]
3000031A  B002     		add sp, sp, #8

#65		 
#66			(* Network 7 *)
#67		Oil_Monitor:
#68			LD		MOTOR {R:7$21}
(*) UNDEF
3000031C  F8DF 737C		ldr r7, [pc, #+892] ; 0x2403D759
30000320  7838     		ldrb r0, [r7]

#69			ST		OIL_PRES_DELAY.IN {R:7$59}
(*) BOOL
30000322  F8DF 7300		ldr r7, [pc, #+768] ; 0x24002C00
30000326  7038     		strb r0, [r7]

#70			MOVE		5000,OIL_PRES_DELAY.PT {R:7$59}
(*) BOOL
30000328  F8DF 72A0		ldr r7, [pc, #+672] ; 0x1388
3000032C  4638     		mov r0, r7
3000032E  F8DF 72F8		ldr r7, [pc, #+760] ; 0x24002C04
30000332  6038     		str r0, [r7]

#71			CAL		OIL_PRES_DELAY {R:7$59}
(*) UDINT
30000334  E92D 0021		stmdb sp!, { r0, r5 }
30000338  F8DF 52E4		ldr r5, [pc, #+740] ; 0x24002BFC
3000033C  F8DF 436C		ldr r4, [pc, #+876] ; 0x300000C8
30000340  F044 0401		orr r4, r4, #1
30000344  47A0     		blx r4
30000346  E8BD 0021		ldmia sp!, { r0, r5 }

#72			LD		OIL_PRES_DELAY.Q {R:7$59}
(*) UNDEF
3000034A  F8DF 72E0		ldr r7, [pc, #+736] ; 0x24002C08
3000034E  7838     		ldrb r0, [r7]

#73			AND		LOW_OIL {R:7$19}
(*) BOOL
30000350  F8DF 7338		ldr r7, [pc, #+824] ; 0x2403D750
30000354  783F     		ldrb r7, [r7]
30000356  4038     		and r0, r0, r7

#74			ST		$$VAR$1
(*) BOOL
30000358  F8DF 72B4		ldr r7, [pc, #+692] ; 0x24002BF8
3000035C  7038     		strb r0, [r7]

#75			JMPCN	$$LAB$4
(-) BOOL
3000035E  2800     		cmp r0, #0
30000360  D005     		beq #10 ; 0x3000036E


#76			LD		1000 {R:7$82}
(*) UNDEF
30000364  F44F 707A		mov r0, #1000 ; 1000

#77			ST		BLINK_RATE {R:7$83}
(*) UINT
30000368  F8DF 7280		ldr r7, [pc, #+640] ; 0x24002BCE
3000036C  8038     		strh r0, [r7]

#78		$$LAB$4:
#79			LD		$$VAR$1
(*) UNDEF
3000036E  F8DF 72A0		ldr r7, [pc, #+672] ; 0x24002BF8
30000372  7838     		ldrb r0, [r7]

#80			S		LOW_OIL_FAULT {R:7$77}
(*) BOOL
30000374  2800     		cmp r0, #0
30000376  D009     		beq #0x000012
30000378  B082     		sub sp, sp, #8
3000037A  F8CD 0000		str r0, [sp]
3000037E  2001     		mov r0, #1
30000380  F8DF 7258		ldr r7, [pc, #+600] ; 0x24002BC6
30000384  7038     		strb r0, [r7]
30000386  F8DD 0000		ldr r0, [sp]
3000038A  B002     		add sp, sp, #8

#81		 
#82			(* Network 8 *)
#83		Manual_Override:
#84			LDN		STOP {R:8$0}
(*) UNDEF
3000038C  F8DF 72EC		ldr r7, [pc, #+748] ; 0x2403D748
30000390  7838     		ldrb r0, [r7]
30000392  2800     		cmp r0, #0
30000394  BF08 2001		eqmov r0, #1
30000398  BF18 2000		nemov r0, #0

#85			OR		USER_BUTTON {R:8$25}
(*) BOOL
3000039C  F8DF 72F8		ldr r7, [pc, #+760] ; 0x2403D758
300003A0  783F     		ldrb r7, [r7]
300003A2  4338     		orr r0, r0, r7

#86			ST		SHUTDOWN_RESET.IN {R:8$14}
(*) BOOL
300003A4  F8DF 728C		ldr r7, [pc, #+652] ; 0x24002C14
300003A8  7038     		strb r0, [r7]

#87			MOVE		2000,SHUTDOWN_RESET.PT {R:8$14}
(*) BOOL
300003AA  F44F 60FA		mov r0, #2000 ; 2000
300003AE  F8DF 7288		ldr r7, [pc, #+648] ; 0x24002C18
300003B2  6038     		str r0, [r7]

#88			CAL		SHUTDOWN_RESET {R:8$14}
(*) UDINT
300003B4  E92D 0021		stmdb sp!, { r0, r5 }
300003B8  F8DF 5274		ldr r5, [pc, #+628] ; 0x24002C10
300003BC  F8DF 42EC		ldr r4, [pc, #+748] ; 0x300000C8
300003C0  F044 0401		orr r4, r4, #1
300003C4  47A0     		blx r4
300003C6  E8BD 0021		ldmia sp!, { r0, r5 }

#89			LD		SHUTDOWN_RESET.Q {R:8$14}
(*) UNDEF
300003CA  F8DF 7270		ldr r7, [pc, #+624] ; 0x24002C1C
300003CE  7838     		ldrb r0, [r7]

#90			R		WARN_LED {R:8$2}
(*) BOOL
300003D0  2800     		cmp r0, #0
300003D2  D009     		beq #0x000012
300003D4  B082     		sub sp, sp, #8
300003D6  F8CD 0000		str r0, [sp]
300003DA  2000     		mov r0, #0
300003DC  F8DF 7288		ldr r7, [pc, #+648] ; 0x2403D742
300003E0  7038     		strb r0, [r7]
300003E2  F8DD 0000		ldr r0, [sp]
300003E6  B002     		add sp, sp, #8

#91			R		WARN_LIGHT {R:8$3}
(*) BOOL
300003E8  2800     		cmp r0, #0
300003EA  D009     		beq #0x000012
300003EC  B082     		sub sp, sp, #8
300003EE  F8CD 0000		str r0, [sp]
300003F2  2000     		mov r0, #0
300003F4  F8DF 72AC		ldr r7, [pc, #+684] ; 0x2403D75B
300003F8  7038     		strb r0, [r7]
300003FA  F8DD 0000		ldr r0, [sp]
300003FE  B002     		add sp, sp, #8

#92			R		MOTOR_OL_FAULT {R:8$6}
(*) BOOL
30000400  2800     		cmp r0, #0
30000402  D009     		beq #0x000012
30000404  B082     		sub sp, sp, #8
30000406  F8CD 0000		str r0, [sp]
3000040A  2000     		mov r0, #0
3000040C  F8DF 71D4		ldr r7, [pc, #+468] ; 0x24002BCC
30000410  7038     		strb r0, [r7]
30000412  F8DD 0000		ldr r0, [sp]
30000416  B002     		add sp, sp, #8

#93			R		LOW_OIL_FAULT {R:8$7}
(*) BOOL
30000418  2800     		cmp r0, #0
3000041A  D009     		beq #0x000012
3000041C  B082     		sub sp, sp, #8
3000041E  F8CD 0000		str r0, [sp]
30000422  2000     		mov r0, #0
30000424  F8DF 71B4		ldr r7, [pc, #+436] ; 0x24002BC6
30000428  7038     		strb r0, [r7]
3000042A  F8DD 0000		ldr r0, [sp]
3000042E  B002     		add sp, sp, #8

#94			R		MOTOR_TEMP_FAULT {R:8$9}
(*) BOOL
30000430  2800     		cmp r0, #0
30000432  D009     		beq #0x000012
30000434  B082     		sub sp, sp, #8
30000436  F8CD 0000		str r0, [sp]
3000043A  2000     		mov r0, #0
3000043C  F8DF 71A8		ldr r7, [pc, #+424] ; 0x24002BCD
30000440  7038     		strb r0, [r7]
30000442  F8DD 0000		ldr r0, [sp]
30000446  B002     		add sp, sp, #8

#95			R		E_STOP_FAULT {R:8$10}
(*) BOOL
30000448  2800     		cmp r0, #0
3000044A  D009     		beq #0x000012
3000044C  B082     		sub sp, sp, #8
3000044E  F8CD 0000		str r0, [sp]
30000452  2000     		mov r0, #0
30000454  F8DF 71BC		ldr r7, [pc, #+444] ; 0x24002BF9
30000458  7038     		strb r0, [r7]
3000045A  F8DD 0000		ldr r0, [sp]
3000045E  B002     		add sp, sp, #8

#96			R		FAULT_LED {R:8$11}
(*) BOOL
30000460  2800     		cmp r0, #0
30000462  D009     		beq #0x000012
30000464  B082     		sub sp, sp, #8
30000466  F8CD 0000		str r0, [sp]
3000046A  2000     		mov r0, #0
3000046C  F8DF 7200		ldr r7, [pc, #+512] ; 0x2403D744
30000470  7038     		strb r0, [r7]
30000472  F8DD 0000		ldr r0, [sp]
30000476  B002     		add sp, sp, #8

#97		 
#98			(* Network 9 *)
#99		At_Pressure_Standby:
#100			LD		PRESSURE_SENSOR {R:9$2}
(*) UNDEF
30000478  F8DF 720C		ldr r7, [pc, #+524] ; 0x2403D74E
3000047C  7838     		ldrb r0, [r7]

#101			ST		MOTOR_STANDBY {R:9$1}
(*) BOOL
3000047E  F8DF 7160		ldr r7, [pc, #+352] ; 0x24002BC7
30000482  7038     		strb r0, [r7]

#102		 
#103			(* Network 10 *)
#104		Fault_Lighting:
#105			LD		LOW_OIL_FAULT {R:10$0}
(*) UNDEF
30000484  F8DF 7154		ldr r7, [pc, #+340] ; 0x24002BC6
30000488  7838     		ldrb r0, [r7]

#106			OR		MOTOR_OL_FAULT {R:10$2}
(*) BOOL
3000048A  F8DF 7158		ldr r7, [pc, #+344] ; 0x24002BCC
3000048E  783F     		ldrb r7, [r7]
30000490  4338     		orr r0, r0, r7

#107			OR		MOTOR_TEMP_FAULT {R:10$4}
(*) BOOL
30000492  F8DF 7154		ldr r7, [pc, #+340] ; 0x24002BCD
30000496  783F     		ldrb r7, [r7]
30000498  4338     		orr r0, r0, r7

#108			ORN		EMERGENCY_STOP {R:10$40}
(*) BOOL
3000049A  F8DF 71E8		ldr r7, [pc, #+488] ; 0x2403D74C
3000049E  783F     		ldrb r7, [r7]
300004A0  2F00     		cmp r7, #0
300004A2  BF08 2701		eqmov r7, #1
300004A6  BF18 2700		nemov r7, #0
300004AA  4338     		orr r0, r0, r7

#109			ST		WARN_LED {R:10$1}
(*) BOOL
300004AC  F8DF 71B8		ldr r7, [pc, #+440] ; 0x2403D742
300004B0  7038     		strb r0, [r7]

#110			ST		WARN_LIGHT {R:10$7}
(*) BOOL
300004B2  F8DF 71F0		ldr r7, [pc, #+496] ; 0x2403D75B
300004B6  7038     		strb r0, [r7]

#111			ST		FAULT_MODE {R:10$47}
(*) BOOL
300004B8  F8DF 7160		ldr r7, [pc, #+352] ; 0x24002BFB
300004BC  7038     		strb r0, [r7]

#112		 
#113			(* Network 11 *)
#114			LD		WARN_LIGHT {R:11$0}
(*) UNDEF
300004BE  F8DF 71E4		ldr r7, [pc, #+484] ; 0x2403D75B
300004C2  7838     		ldrb r0, [r7]

#115			ST		WARN_LED {R:11$1}
(*) BOOL
300004C4  F8DF 71A0		ldr r7, [pc, #+416] ; 0x2403D742
300004C8  7038     		strb r0, [r7]

#116		 
#117			(* Network 12 *)
#118			LD		WARN_BUZZ {R:12$0}
(*) UNDEF
300004CA  F8DF 71DC		ldr r7, [pc, #+476] ; 0x2403D75C
300004CE  7838     		ldrb r0, [r7]

#119			ST		BUZZ_LED {R:12$1}
(*) BOOL
300004D0  F8DF 7198		ldr r7, [pc, #+408] ; 0x2403D743
300004D4  7038     		strb r0, [r7]

#120		 
#121			(* Network 13 *)
#122			LD		MOTOR {R:13$0}
(*) UNDEF
300004D6  F8DF 71C4		ldr r7, [pc, #+452] ; 0x2403D759
300004DA  7838     		ldrb r0, [r7]

#123			ST		MOTOR_LED {R:13$1}
(*) BOOL
300004DC  F8DF 7180		ldr r7, [pc, #+384] ; 0x2403D740
300004E0  7038     		strb r0, [r7]

#124			ST		OK_LED {R:13$2}
(*) BOOL
300004E2  F8DF 7190		ldr r7, [pc, #+400] ; 0x2403D745
300004E6  7038     		strb r0, [r7]

#125		 
#126			(* Network 14 *)
#127			LD		ACD {R:14$0}
(*) UNDEF
300004E8  F8DF 71B4		ldr r7, [pc, #+436] ; 0x2403D75A
300004EC  7838     		ldrb r0, [r7]

#128			ST		ACD_LED {R:14$1}
(*) BOOL
300004EE  F8DF 7174		ldr r7, [pc, #+372] ; 0x2403D741
300004F2  7038     		strb r0, [r7]

#129		 
#130			(* Network 15 *)
#131			LD		MOTOR_STANDBY {R:15$0}
(*) UNDEF
300004F4  F8DF 70E8		ldr r7, [pc, #+232] ; 0x24002BC7
300004F8  7838     		ldrb r0, [r7]

#132			ST		STANDBY_LED {R:15$1}
(*) BOOL
300004FA  F8DF 717C		ldr r7, [pc, #+380] ; 0x2403D746
300004FE  7038     		strb r0, [r7]

#133		 
#134			(* Network 16 *)
#135		Fault_Code_On:
#136			LD		FAULT_MODE {R:16$15}
(*) UNDEF
30000500  F8DF 7118		ldr r7, [pc, #+280] ; 0x24002BFB
30000504  7838     		ldrb r0, [r7]

#137			ANDN		FLASH {R:16$0}
(*) BOOL
30000506  F8DF 7110		ldr r7, [pc, #+272] ; 0x24002BFA
3000050A  783F     		ldrb r7, [r7]
3000050C  2F00     		cmp r7, #0
3000050E  BF08 2701		eqmov r7, #1
30000512  BF18 2700		nemov r7, #0
30000516  4038     		and r0, r0, r7

#138			ST		FLASHER.IN {R:16$8}
(*) BOOL
30000518  F8DF 7128		ldr r7, [pc, #+296] ; 0x24002C28
3000051C  7038     		strb r0, [r7]

#139			MOVE		BLINK_RATE,FLASHER.PT {R:16$8}
(*) BOOL
3000051E  F8DF 70CC		ldr r7, [pc, #+204] ; 0x24002BCE
30000522  8838     		ldrh r0, [r7]
30000524  F8DF 7120		ldr r7, [pc, #+288] ; 0x24002C2C
30000528  6038     		str r0, [r7]

#140			CAL		FLASHER {R:16$8}
(*) UDINT
3000052A  E92D 0021		stmdb sp!, { r0, r5 }
3000052E  F8DF 5110		ldr r5, [pc, #+272] ; 0x24002C24
30000532  F8DF 4178		ldr r4, [pc, #+376] ; 0x300000C8
30000536  F044 0401		orr r4, r4, #1
3000053A  47A0     		blx r4
3000053C  E8BD 0021		ldmia sp!, { r0, r5 }

#141			LD		FLASHER.Q {R:16$8}
(*) UNDEF
30000540  F8DF 7108		ldr r7, [pc, #+264] ; 0x24002C30
30000544  7838     		ldrb r0, [r7]

#142			ST		FLASH {R:16$1}
(*) BOOL
30000546  F8DF 70D0		ldr r7, [pc, #+208] ; 0x24002BFA
3000054A  7038     		strb r0, [r7]

#143			S		FAULT_LED {R:16$14}
(*) BOOL
3000054C  2800     		cmp r0, #0
3000054E  D009     		beq #0x000012
30000550  B082     		sub sp, sp, #8
30000552  F8CD 0000		str r0, [sp]
30000556  2001     		mov r0, #1
30000558  F8DF 7114		ldr r7, [pc, #+276] ; 0x2403D744
3000055C  7038     		strb r0, [r7]
3000055E  F8DD 0000		ldr r0, [sp]
30000562  B002     		add sp, sp, #8

#144		 
#145			(* Network 17 *)
#146		Fault_Code_Off:
#147			LD		FAULT_MODE {R:17$37}
(*) UNDEF
30000564  F8DF 70B4		ldr r7, [pc, #+180] ; 0x24002BFB
30000568  7838     		ldrb r0, [r7]

#148			AND		FLASH {R:17$9}
(*) BOOL
3000056A  F8DF 70AC		ldr r7, [pc, #+172] ; 0x24002BFA
3000056E  783F     		ldrb r7, [r7]
30000570  4038     		and r0, r0, r7

#149			ST		FLASHER_OFF.IN {R:17$27}
(*) BOOL
30000572  F8DF 70E0		ldr r7, [pc, #+224] ; 0x24002C3C
30000576  7038     		strb r0, [r7]

#150			MOVE		BLINK_RATE,FLASHER_OFF.PT {R:17$27}
(*) BOOL
30000578  F8DF 7070		ldr r7, [pc, #+112] ; 0x24002BCE
3000057C  8838     		ldrh r0, [r7]
3000057E  F8DF 70D8		ldr r7, [pc, #+216] ; 0x24002C40
30000582  6038     		str r0, [r7]

#151			CAL		FLASHER_OFF {R:17$27}
(*) UDINT
30000584  E92D 0021		stmdb sp!, { r0, r5 }
30000588  F8DF 50C4		ldr r5, [pc, #+196] ; 0x24002C38
3000058C  F8DF 411C		ldr r4, [pc, #+284] ; 0x300000C8
30000590  F044 0401		orr r4, r4, #1
30000594  47A0     		blx r4
30000596  E8BD 0021		ldmia sp!, { r0, r5 }

#152			LD		FLASHER_OFF.Q {R:17$27}
(*) UNDEF
3000059A  F8DF 70C0		ldr r7, [pc, #+192] ; 0x24002C44
3000059E  7838     		ldrb r0, [r7]

#153			ST		FLASH {R:17$1}
(*) BOOL
300005A0  F8DF 7074		ldr r7, [pc, #+116] ; 0x24002BFA
300005A4  7038     		strb r0, [r7]

#154			R		FAULT_LED {R:17$36}
(*) BOOL
300005A6  2800     		cmp r0, #0
300005A8  D009     		beq #0x000012
300005AA  B082     		sub sp, sp, #8
300005AC  F8CD 0000		str r0, [sp]
300005B0  2000     		mov r0, #0
300005B2  F8DF 70BC		ldr r7, [pc, #+188] ; 0x2403D744
300005B6  7038     		strb r0, [r7]
300005B8  F8DD 0000		ldr r0, [sp]
300005BC  B002     		add sp, sp, #8

300005BE  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
300005C2  F8DD E000		ldr lr, [sp]
300005C6  B002     		add sp, sp, #8

300005C8  4770     		bx lr

300005CC  00001388		; 0x00001388
300005D0  00002710		; 0x00002710
300005D4  00007530		; 0x00007530
300005D8  000DBBA0		; 0x000DBBA0
300005DC  24002BC6		; 0x24002BC6
300005E0  24002BC7		; 0x24002BC7
300005E4  24002BCC		; 0x24002BCC
300005E8  24002BCD		; 0x24002BCD
300005EC  24002BCE		; 0x24002BCE
300005F0  24002BD0		; 0x24002BD0
300005F4  24002BD4		; 0x24002BD4
300005F8  24002BD8		; 0x24002BD8
300005FC  24002BDC		; 0x24002BDC
30000600  24002BE4		; 0x24002BE4
30000604  24002BE8		; 0x24002BE8
30000608  24002BEC		; 0x24002BEC
3000060C  24002BF0		; 0x24002BF0
30000610  24002BF8		; 0x24002BF8
30000614  24002BF9		; 0x24002BF9
30000618  24002BFA		; 0x24002BFA
3000061C  24002BFB		; 0x24002BFB
30000620  24002BFC		; 0x24002BFC
30000624  24002C00		; 0x24002C00
30000628  24002C04		; 0x24002C04
3000062C  24002C08		; 0x24002C08
30000630  24002C10		; 0x24002C10
30000634  24002C14		; 0x24002C14
30000638  24002C18		; 0x24002C18
3000063C  24002C1C		; 0x24002C1C
30000640  24002C24		; 0x24002C24
30000644  24002C28		; 0x24002C28
30000648  24002C2C		; 0x24002C2C
3000064C  24002C30		; 0x24002C30
30000650  24002C38		; 0x24002C38
30000654  24002C3C		; 0x24002C3C
30000658  24002C40		; 0x24002C40
3000065C  24002C44		; 0x24002C44
30000660  FFFFFFFF		; 0x2403D740
30000664  FFFFFFFF		; 0x2403D741
30000668  FFFFFFFF		; 0x2403D742
3000066C  FFFFFFFF		; 0x2403D743
30000670  FFFFFFFF		; 0x2403D744
30000674  FFFFFFFF		; 0x2403D745
30000678  FFFFFFFF		; 0x2403D746
3000067C  FFFFFFFF		; 0x2403D748
30000680  FFFFFFFF		; 0x2403D74A
30000684  FFFFFFFF		; 0x2403D74C
30000688  FFFFFFFF		; 0x2403D74E
3000068C  FFFFFFFF		; 0x2403D750
30000690  FFFFFFFF		; 0x2403D752
30000694  FFFFFFFF		; 0x2403D754
30000698  FFFFFFFF		; 0x2403D758
3000069C  FFFFFFFF		; 0x2403D759
300006A0  FFFFFFFF		; 0x2403D75A
300006A4  FFFFFFFF		; 0x2403D75B
300006A8  FFFFFFFF		; 0x2403D75C
300006AC  300000C8		; 0x300000C8

END_PROGRAM


**************************************************
	Target variable image generation
**************************************************


*** INPUT:
300006B0  4770     		bx lr


*** OUTPUT:
300006B2  4770     		bx lr



**************************************************
	Task Fast init code
**************************************************

300006B4  B082     		sub sp, sp, #8
300006B6  F8CD E000		str lr, [sp]
300006BA  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

300006BE  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
300006C2  F8DD E000		ldr lr, [sp]
300006C6  B002     		add sp, sp, #8

300006C8  4770     		bx lr

**************************************************
	List program: InitParDB
**************************************************

PROGRAM InitParDB

        VAR
warningsKiller : USINT;
dummyCrc32 : UDINT;
	END_VAR

END_PROGRAM

300006D0  B082     		sub sp, sp, #8
300006D2  F8CD E000		str lr, [sp]
300006D6  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

#0		{SRC:InitParDB}
#1		(*$WAITSWITCH$*)
#2		
#3			(* dummyCrc32 := 0; *)
#4			MOVE		0,dummyCrc32	{LNXT:3|5|-1}
(*) UDINT
300006DA  2000     		mov r0, #0 ; 0
300006DC  F8DF 7058		ldr r7, [pc, #+88] ; 0x24002BC8
300006E0  6038     		str r0, [r7]

#5		
#6			(* warningsKiller := sysDBase_SetExtTable( TO_DWORD( 0 ), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ); *)
#7			LDP0		0	{LNXT:5|3|-1}
(-) UDINT
#8			TO_DWORD	{LNXT:5|3|-1}
(-) USINT
300006E2  2000     		mov r0, #0 ; 0

#9			sysDBase_SetExtTable		0, 0, 0, 0, 0, 0, 0, 0, 0, 0	{LNXT:5|3|-1}
(*) DWORD
300006E4  B088     		sub sp, sp, #32
300006E6  2700     		mov r7, #0 ; 0
300006E8  4639     		mov r1, r7
300006EA  2700     		mov r7, #0 ; 0
300006EC  463A     		mov r2, r7
300006EE  2700     		mov r7, #0 ; 0
300006F0  463B     		mov r3, r7
300006F2  2700     		mov r7, #0 ; 0
300006F4  F8CD 7000		str r7, [sp]
300006F8  2700     		mov r7, #0 ; 0
300006FA  F8CD 7004		str r7, [sp, #+4]
300006FE  2700     		mov r7, #0 ; 0
30000700  F8CD 7008		str r7, [sp, #+8]
30000704  2700     		mov r7, #0 ; 0
30000706  F8CD 700C		str r7, [sp, #+12]
3000070A  2700     		mov r7, #0 ; 0
3000070C  F8CD 7010		str r7, [sp, #+16]
30000710  2700     		mov r7, #0 ; 0
30000712  F8CD 7014		str r7, [sp, #+20]
30000716  2700     		mov r7, #0 ; 0
30000718  F8CD 7018		str r7, [sp, #+24]
3000071C  F8DF 4010		ldr r4, [pc, #+16] ; 0x806BE21
30000720  F044 0401		orr r4, r4, #1
30000724  47A0     		blx r4
30000726  B008     		add sp, sp, #32

#10			ST		warningsKiller	{LNXT:5|3|-1}
(*) USINT
30000728  F8DF 7008		ldr r7, [pc, #+8] ; 0x24002BC5
3000072C  7038     		strb r0, [r7]

3000072E  E005     		b #10

30000730  FFFFFFFF		; 0x0806BE21
30000734  24002BC5		; 0x24002BC5
30000738  24002BC8		; 0x24002BC8

END_PROGRAM
**************************************************
	List program: $$IOConfig
**************************************************

PROGRAM $$IOConfig

        VAR
warningsKiller : BOOL;
	END_VAR

END_PROGRAM

#0		{SRC:$$IOConfig}
#1		(*$WAITSWITCH$*)
#2		
#3			(* warningsKiller := sysCfgAnalogRes(16); *)
#4			LDP0		16	{LNXT:4|7|-1}
(-) UDINT
#5			sysCfgAnalogRes	{LNXT:4|7|-1}
(*) USINT
3000073C  2010     		mov r0, #16 ; 16
3000073E  F8DF 40BC		ldr r4, [pc, #+188] ; 0x8072BD1
30000742  F044 0401		orr r4, r4, #1
30000746  47A0     		blx r4

#6			ST		warningsKiller	{LNXT:4|7|-1}
(*) BOOL
30000748  F8DF 70B8		ldr r7, [pc, #+184] ; 0x24002BC4
3000074C  7038     		strb r0, [r7]

#7		
#8			(* warningsKiller := sysCfgProgInput(0, 0); *)
#9			LDP0		0	{LNXT:7|8|-1}
(-) BOOL
#10			sysCfgProgInput		0	{LNXT:7|8|-1}
(*) USINT
3000074E  2000     		mov r0, #0 ; 0
30000750  2100     		mov r1, #0 ; 0
30000752  F8DF 40AC		ldr r4, [pc, #+172] ; 0x8072BDD
30000756  F044 0401		orr r4, r4, #1
3000075A  47A0     		blx r4

#11			ST		warningsKiller	{LNXT:7|8|-1}
(*) BOOL
3000075C  F8DF 70A4		ldr r7, [pc, #+164] ; 0x24002BC4
30000760  7038     		strb r0, [r7]

#12		
#13			(* warningsKiller := sysCfgProgInput(1, 0); *)
#14			LDP0		1	{LNXT:8|9|-1}
(-) BOOL
#15			sysCfgProgInput		0	{LNXT:8|9|-1}
(*) USINT
30000762  2001     		mov r0, #1 ; 1
30000764  2100     		mov r1, #0 ; 0
30000766  F8DF 4098		ldr r4, [pc, #+152] ; 0x8072BDD
3000076A  F044 0401		orr r4, r4, #1
3000076E  47A0     		blx r4

#16			ST		warningsKiller	{LNXT:8|9|-1}
(*) BOOL
30000770  F8DF 7090		ldr r7, [pc, #+144] ; 0x24002BC4
30000774  7038     		strb r0, [r7]

#17		
#18			(* warningsKiller := sysCfgProgInput(2, 0); *)
#19			LDP0		2	{LNXT:9|10|-1}
(-) BOOL
#20			sysCfgProgInput		0	{LNXT:9|10|-1}
(*) USINT
30000776  2002     		mov r0, #2 ; 2
30000778  2100     		mov r1, #0 ; 0
3000077A  F8DF 4084		ldr r4, [pc, #+132] ; 0x8072BDD
3000077E  F044 0401		orr r4, r4, #1
30000782  47A0     		blx r4

#21			ST		warningsKiller	{LNXT:9|10|-1}
(*) BOOL
30000784  F8DF 707C		ldr r7, [pc, #+124] ; 0x24002BC4
30000788  7038     		strb r0, [r7]

#22		
#23			(* warningsKiller := sysCfgProgInput(3, 0); *)
#24			LDP0		3	{LNXT:10|11|-1}
(-) BOOL
#25			sysCfgProgInput		0	{LNXT:10|11|-1}
(*) USINT
3000078A  2003     		mov r0, #3 ; 3
3000078C  2100     		mov r1, #0 ; 0
3000078E  F8DF 4070		ldr r4, [pc, #+112] ; 0x8072BDD
30000792  F044 0401		orr r4, r4, #1
30000796  47A0     		blx r4

#26			ST		warningsKiller	{LNXT:10|11|-1}
(*) BOOL
30000798  F8DF 7068		ldr r7, [pc, #+104] ; 0x24002BC4
3000079C  7038     		strb r0, [r7]

#27		
#28			(* warningsKiller := sysCfgProgInput(4, 0); *)
#29			LDP0		4	{LNXT:11|12|-1}
(-) BOOL
#30			sysCfgProgInput		0	{LNXT:11|12|-1}
(*) USINT
3000079E  2004     		mov r0, #4 ; 4
300007A0  2100     		mov r1, #0 ; 0
300007A2  F8DF 405C		ldr r4, [pc, #+92] ; 0x8072BDD
300007A6  F044 0401		orr r4, r4, #1
300007AA  47A0     		blx r4

#31			ST		warningsKiller	{LNXT:11|12|-1}
(*) BOOL
300007AC  F8DF 7054		ldr r7, [pc, #+84] ; 0x24002BC4
300007B0  7038     		strb r0, [r7]

#32		
#33			(* warningsKiller := sysCfgProgInput(5, 0); *)
#34			LDP0		5	{LNXT:12|13|-1}
(-) BOOL
#35			sysCfgProgInput		0	{LNXT:12|13|-1}
(*) USINT
300007B2  2005     		mov r0, #5 ; 5
300007B4  2100     		mov r1, #0 ; 0
300007B6  F8DF 4048		ldr r4, [pc, #+72] ; 0x8072BDD
300007BA  F044 0401		orr r4, r4, #1
300007BE  47A0     		blx r4

#36			ST		warningsKiller	{LNXT:12|13|-1}
(*) BOOL
300007C0  F8DF 7040		ldr r7, [pc, #+64] ; 0x24002BC4
300007C4  7038     		strb r0, [r7]

#37		
#38			(* warningsKiller := sysCfgProgInput(6, 0); *)
#39			LDP0		6	{LNXT:13|14|-1}
(-) BOOL
#40			sysCfgProgInput		0	{LNXT:13|14|-1}
(*) USINT
300007C6  2006     		mov r0, #6 ; 6
300007C8  2100     		mov r1, #0 ; 0
300007CA  F8DF 4034		ldr r4, [pc, #+52] ; 0x8072BDD
300007CE  F044 0401		orr r4, r4, #1
300007D2  47A0     		blx r4

#41			ST		warningsKiller	{LNXT:13|14|-1}
(*) BOOL
300007D4  F8DF 702C		ldr r7, [pc, #+44] ; 0x24002BC4
300007D8  7038     		strb r0, [r7]

#42		
#43			(* warningsKiller := sysCfgProgInput(7, 0); *)
#44			LDP0		7	{LNXT:14|4|-1}
(-) BOOL
#45			sysCfgProgInput		0	{LNXT:14|4|-1}
(*) USINT
300007DA  2007     		mov r0, #7 ; 7
300007DC  2100     		mov r1, #0 ; 0
300007DE  F8DF 4020		ldr r4, [pc, #+32] ; 0x8072BDD
300007E2  F044 0401		orr r4, r4, #1
300007E6  47A0     		blx r4

#46			ST		warningsKiller	{LNXT:14|4|-1}
(*) BOOL
300007E8  F8DF 7018		ldr r7, [pc, #+24] ; 0x24002BC4
300007EC  7038     		strb r0, [r7]

300007EE  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
300007F2  F8DD E000		ldr lr, [sp]
300007F6  B002     		add sp, sp, #8

300007F8  4770     		bx lr

300007FC  FFFFFFFF		; 0x08072BD1
30000800  FFFFFFFF		; 0x08072BDD
30000804  24002BC4		; 0x24002BC4

END_PROGRAM


**************************************************
	Target variable image generation
**************************************************


*** INPUT:
30000808  4770     		bx lr


*** OUTPUT:
3000080A  4770     		bx lr



**************************************************
	Task Init init code
**************************************************

3000080C  B082     		sub sp, sp, #8
3000080E  F8CD E000		str lr, [sp]
30000812  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

30000816  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
3000081A  F8DD E000		ldr lr, [sp]
3000081E  B002     		add sp, sp, #8

30000820  4770     		bx lr



**************************************************
	Global init code
**************************************************

30000830  B082     		sub sp, sp, #8
30000832  F8CD E000		str lr, [sp]
30000836  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

3000083A  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
3000083E  F8DD E000		ldr lr, [sp]
30000842  B002     		add sp, sp, #8

30000844  4770     		bx lr



**************************************************
	Global RETAIN init code
**************************************************

30000846  B082     		sub sp, sp, #8
30000848  F8CD E000		str lr, [sp]
3000084C  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

30000850  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
30000854  F8DD E000		ldr lr, [sp]
30000858  B002     		add sp, sp, #8

3000085A  4770     		bx lr



**************************************************
	Task $$VirtualTables init code
**************************************************

3000085C  B082     		sub sp, sp, #8
3000085E  F8CD E000		str lr, [sp]
30000862  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

30000866  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
3000086A  F8DD E000		ldr lr, [sp]
3000086E  B002     		add sp, sp, #8

30000870  4770     		bx lr



********************************************
MEMORY MAP
********************************************

Code area type:          		       main code
Start code area:          		0000000030000000h
End code area:            		0000000030000A90h
Code size:                		00000A90h

Start local data area:    		0000000024002BB8h
End local data area:      		0000000024002C4Eh
Local data size:          		00000096h

Start retentive data area:		00000000240027B8h
End retentive data area:  		00000000240027B8h
Retentive data size:      		00000000h

Start bit data area:      		0000000000000000h
End bit data area:        		0000000000000000h
Bit data size:            		00000000h



********************************************
CODE ID:                                2DAB571E
DEBUG MEMO ID:                          300058B3
FULL MEMO ID:                           0000C710
********************************************

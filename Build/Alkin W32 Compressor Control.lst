***********************************************************************
*
*	CODE GENERATION LISTING FOR: Alkin W32 Compressor Control
*	COMPILER VERSION: 5.22.0.18
*
***********************************************************************

**************************************************
	CODE GENERATOR SUBROUTINES
**************************************************

$$MOD:
300000B0  FB90 F3F1		sdiv r3, r0, r1
300000B4  4359     		mul r1, r1, r3
300000B6  EBC1 0000		rsb r0, r1, r0
300000BA  4770     		bx lr

$$MOD_U:
300000BC  FBB0 F3F1		udiv r3, r0, r1
300000C0  4359     		mul r1, r1, r3
300000C2  EBC1 0000		rsb r0, r1, r0
300000C6  4770     		bx lr

**************************************************
	List function block: TOF
**************************************************

FUNCTION_BLOCK TOF

	{ DE:"<HTML>The TOF block produces a delayed de-activation of the output Q with respect of the input IN. The delay time is expressed in milliseconds on the PT input.</br></br>
<img src= tofscheme.png>
<ul>
<li>if IN is TRUE then Q is TRUE</li>
<li>Q becomes FALSE after PT milliseconds from IN becomes FALSE</li>
<li>Q remains FALSE until IN remains FALSE</li>
</ul>" }

        VAR_INPUT
IN : BOOL;	{ DE:"Timer input source" }
PT : UDINT;	{ DE:"Preset time value (ms)" }
	END_VAR

        VAR_OUTPUT
Q : BOOL;	{ DE:"Timer output" }
ET : UDINT;	{ DE:"Timer current value (ms)" }
	END_VAR

        VAR_EXTERNAL
	{G:"System_Timers"}
sysTimer AT %MD60000.0 : UDINT;	{ DE:"System timer [ms]" }
	END_VAR

        VAR
timStart : UDINT;	{ DE:"Time value at start of counting" }
	END_VAR

END_FUNCTION_BLOCK

300000C8  E92D 4040		stmdb sp!, { r6, lr }
300000CC  462E     		mov r6, r5

#0		{SRC:TOF}
#1		
#2			(*	Check if in counting	*)
#3		
#4			LD		IN
(-) UNDEF
300000CE  7930     		ldrb r0, [r6, #4]

#5			JMPC	lReset
(-) BOOL
300000D0  2800     		cmp r0, #0
300000D2  D130     		bne #96 ; 0x30000136


#6		
#7			(*	Check if falling edge of IN	*)
#8			LD		Q
(-) UNDEF
300000D6  7B30     		ldrb r0, [r6, #12]

#9			RETCN
#10		
(-) BOOL
300000D8  2800     		cmp r0, #0
300000DA  D031     		beq #98 ; 0x30000140


#11			(*	Check if already in counting *)
#12			LD		timStart
(-) UNDEF
300000DE  6830     		ldr r0, [r6]

#13			EQ		0
(*) UDINT
300000E0  2800     		cmp r0, #0
300000E2  BF18 2000		nemov r0, #0
300000E6  BF08 2001		eqmov r0, #1

#14			JMPCN	lUpdate
(-) BOOL
300000EA  2800     		cmp r0, #0
300000EC  D004     		beq #8 ; 0x300000F8


#15			
#16			(*	Start of counting *)
#17			LD		sysTimer
(*) UNDEF
300000F0  F8DF 7054		ldr r7, [pc, #+84] ; 0x2403C680
300000F4  6838     		ldr r0, [r7]

#18			ST		timStart
(-) UDINT
300000F6  6030     		str r0, [r6]

#19		
#20		lUpdate:
#21			
#22			(*	Update timer and check if time elapsed *)
#23			LD		sysTimer
(*) UNDEF
300000F8  F8DF 704C		ldr r7, [pc, #+76] ; 0x2403C680
300000FC  6838     		ldr r0, [r7]

#24			SUB		timStart
(*) UDINT
300000FE  6837     		ldr r7, [r6]
30000100  1BC0     		sub r0, r0, r7

#25			ST		ET
(-) UDINT
30000102  6130     		str r0, [r6, #16]

#26			GE		PT
(*) UDINT
30000104  68B7     		ldr r7, [r6, #8]
30000106  42B8     		cmp r0, r7
30000108  BF38 2000		lomov r0, #0
3000010C  BF28 2001		hsmov r0, #1

#27			STN		Q
(*) BOOL
30000110  B082     		sub sp, sp, #8
30000112  F8CD 0000		str r0, [sp]
30000116  2800     		cmp r0, #0
30000118  BF08 2001		eqmov r0, #1
3000011C  BF18 2000		nemov r0, #0
30000120  7330     		strb r0, [r6, #12]
30000122  F8DD 0000		ldr r0, [sp]
30000126  B002     		add sp, sp, #8

#28			RETCN
#29			
(-) BOOL
30000128  2800     		cmp r0, #0
3000012A  D009     		beq #18 ; 0x30000140


#30			(*	Limit actual time value *)
#31			LD		PT
(-) UNDEF
3000012E  68B0     		ldr r0, [r6, #8]

#32			ST		ET
(-) UDINT
30000130  6130     		str r0, [r6, #16]

#33			RET
#34		
(-) UDINT
30000132  E005     		b #10 ; 0x30000140


#35		lReset:
#36		
#37			(*	Reset status *)
#38			LD		0
(-) UNDEF
30000136  2000     		mov r0, #0 ; 0

#39			ST		ET
(-) USINT
30000138  6130     		str r0, [r6, #16]

#40			ST		timStart
(-) UDINT
3000013A  6030     		str r0, [r6]

#41			LD		TRUE
(-) UNDEF
3000013C  2001     		mov r0, #1 ; 1

#42			ST		Q
(-) BOOL
3000013E  7330     		strb r0, [r6, #12]

30000140  E8BD 4040		ldmia sp!, { r6, lr }

30000144  4770     		bx lr

30000148  FFFFFFFF		; 0x2403C680


Frame allocation:

	0000       : VAR timStart
	0004 bit  0: VAR IN
	0008       : VAR PT
	000C bit  0: VAR Q
	0010       : VAR ET

END_FUNCTION_BLOCK
**************************************************
	List function block: TON
**************************************************

FUNCTION_BLOCK TON

	{ DE:"<HTML>The TON block produces a delayed output Q of the input IN. The delay time is expressed in milliseconds on the PT input.</br></br>
<img src= tonscheme.png>
<ul>
<li>if IN is FALSE Q is false</li>
<li>Q becomes TRUE as IN remains TRUE for PT milliseconds</li>
<li>Q remains TRUE until IN remains TRUE</li>
</ul>" }

        VAR_INPUT
IN : BOOL;	{ DE:"Timer input source" }
PT : UDINT;	{ DE:"Preset time value (ms)" }
	END_VAR

        VAR_OUTPUT
Q : BOOL;	{ DE:"Timer output" }
ET : UDINT;	{ DE:"Timer current value (ms)" }
	END_VAR

        VAR_EXTERNAL
	{G:"System_Timers"}
sysTimer AT %MD60000.0 : UDINT;	{ DE:"System timer [ms]" }
	END_VAR

        VAR
timStart : UDINT;	{ DE:"Time value at start of counting" }
	END_VAR

END_FUNCTION_BLOCK

3000014C  E92D 4040		stmdb sp!, { r6, lr }
30000150  462E     		mov r6, r5

#0		{SRC:TON}
#1		
#2			(*	Check if in counting	*)
#3		
#4			LD		IN
(-) UNDEF
30000152  7930     		ldrb r0, [r6, #4]

#5			JMPCN	lReset
(-) BOOL
30000154  2800     		cmp r0, #0
30000156  D025     		beq #74 ; 0x300001A4


#6		
#7			(*	Check if Q is TRUE *)
#8			LD		Q
(-) UNDEF
3000015A  7B30     		ldrb r0, [r6, #12]

#9			RETC
#10			
(-) BOOL
3000015C  2800     		cmp r0, #0
3000015E  D126     		bne #76 ; 0x300001AE


#11			(*	Check if already in counting *)
#12			LD		timStart
(-) UNDEF
30000162  6830     		ldr r0, [r6]

#13			EQ		0
(*) UDINT
30000164  2800     		cmp r0, #0
30000166  BF18 2000		nemov r0, #0
3000016A  BF08 2001		eqmov r0, #1

#14			JMPCN	lUpdate
(-) BOOL
3000016E  2800     		cmp r0, #0
30000170  D004     		beq #8 ; 0x3000017C


#15		
#16			(*	Start of counting *)
#17			LD		sysTimer
(*) UNDEF
30000174  F8DF 703C		ldr r7, [pc, #+60] ; 0x2403C680
30000178  6838     		ldr r0, [r7]

#18			ST		timStart
(-) UDINT
3000017A  6030     		str r0, [r6]

#19			
#20		lUpdate:
#21		
#22			(*	Update timer and check if time elapsed *)
#23			LD		sysTimer
(*) UNDEF
3000017C  F8DF 7034		ldr r7, [pc, #+52] ; 0x2403C680
30000180  6838     		ldr r0, [r7]

#24			SUB		timStart
(*) UDINT
30000182  6837     		ldr r7, [r6]
30000184  1BC0     		sub r0, r0, r7

#25			ST		ET
(-) UDINT
30000186  6130     		str r0, [r6, #16]

#26			GE		PT
(*) UDINT
30000188  68B7     		ldr r7, [r6, #8]
3000018A  42B8     		cmp r0, r7
3000018C  BF38 2000		lomov r0, #0
30000190  BF28 2001		hsmov r0, #1

#27			ST		Q
(-) BOOL
30000194  7330     		strb r0, [r6, #12]

#28			RETCN
#29		
(-) BOOL
30000196  2800     		cmp r0, #0
30000198  D009     		beq #18 ; 0x300001AE


#30			(*	Limit actual time value *)
#31			LD		PT
(-) UNDEF
3000019C  68B0     		ldr r0, [r6, #8]

#32			ST		ET
(-) UDINT
3000019E  6130     		str r0, [r6, #16]

#33			RET
#34		
(-) UDINT
300001A0  E005     		b #10 ; 0x300001AE


#35		lReset:
#36		
#37			(*	Reset status *)
#38			LD		0
(-) UNDEF
300001A4  2000     		mov r0, #0 ; 0

#39			ST		ET
(-) USINT
300001A6  6130     		str r0, [r6, #16]

#40			ST		timStart
(-) UDINT
300001A8  6030     		str r0, [r6]

#41			LD		FALSE
(-) UNDEF
300001AA  2000     		mov r0, #0 ; 0

#42			ST		Q
(-) BOOL
300001AC  7330     		strb r0, [r6, #12]

300001AE  E8BD 4040		ldmia sp!, { r6, lr }

300001B2  4770     		bx lr

300001B4  FFFFFFFF		; 0x2403C680


Frame allocation:

	0000       : VAR timStart
	0004 bit  0: VAR IN
	0008       : VAR PT
	000C bit  0: VAR Q
	0010       : VAR ET

END_FUNCTION_BLOCK
**************************************************
	List program: main
**************************************************

PROGRAM main

END_PROGRAM

300001C0  B082     		sub sp, sp, #8
300001C2  F8CD E000		str lr, [sp]
300001C6  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

#0		{SRC:main}
#1		(*$WAITSWITCH$*)
#2		
#3			(* cnt := cnt + 1; *)
#4			LD		cnt	{LNXT:2|2|-1}
(*) UNDEF
300001CA  F8DF 7010		ldr r7, [pc, #+16] ; 0x24002C4C
300001CE  F9B7 0000		ldrsh r0, [r7]

#5			ADD		1	{LNXT:2|2|-1}
(-) INT
300001D2  1C40     		add r0, r0, #1

#6			ST		cnt	{LNXT:2|2|-1}
(*) INT
300001D4  F8DF 7004		ldr r7, [pc, #+4] ; 0x24002C4C
300001D8  8038     		strh r0, [r7]

300001DA  E001     		b #2

300001DC  24002C4C		; 0x24002C4C

END_PROGRAM
**************************************************
	List program: Ladder
**************************************************

PROGRAM Ladder

        VAR
Low_Oil_Fault : BOOL;
Motor_OL_Fault : BOOL;
Motor_Temp_Fault : BOOL;
E_Stop_Fault : BOOL;
ACD_Cycle_Start : TON;	{ DE:"ACD Cycle" }
ACD_Vent_Open : TON;	{ DE:"ACD Vent Open" }
Oil_Pres_Delay : TON;
Flash : BOOL;
Motor_Standby : BOOL;
Flasher : TON;
Flasher_Off : TON;
Blink_Rate : UINT;
Fault_Mode : BOOL;
Shutdown_Reset : TON;
BlinkOff_Rate : INT;
ACD_Startup : TON;
ACD_Starter : TOF;
Start_Pause : TON;
Pressure_Check : TOF;
Clapper : BOOL;	{ DE:"Clap on clap off" }
	END_VAR

        VAR CONSTANT
ACD_Open : INT := 30000;	{ DE:"Duration of ACD Venting (ms)" }
ACD_Cycle : UDINT := 900000;	{ DE:"Duration of ACD Vent Cycle (ms)" }
	END_VAR

END_PROGRAM

#0			{SRC:Ladder}
#1		 
#2		  
#3			(* Network 1 *)
#4		Fill_Cycle:
#5			LD		START {R:1$17}
(*) UNDEF
300001E0  F8DF 7694		ldr r7, [pc, #+1684] ; 0x2403D74A
300001E4  7838     		ldrb r0, [r7]

#6			OR		MOTOR {R:1$110}
(*) BOOL
300001E6  F8DF 76AC		ldr r7, [pc, #+1708] ; 0x2403D759
300001EA  783F     		ldrb r7, [r7]
300001EC  4338     		orr r0, r0, r7

#7			OR(		MOTOR_STANDBY {R:1$114}
(*) BOOL
300001EE  B082     		sub sp, sp, #8
300001F0  F8CD 0000		str r0, [sp]
300001F4  F8DF 75B8		ldr r7, [pc, #+1464] ; 0x24002BC7
300001F8  7838     		ldrb r0, [r7]

#8			AND		CLAPPER {R:1$120}
(*) BOOL
300001FA  F8DF 7658		ldr r7, [pc, #+1624] ; 0x24002CA0
300001FE  783F     		ldrb r7, [r7]
30000200  4038     		and r0, r0, r7

#9			)
#10			AND		EMERGENCY_STOP {R:1$95}
(*) BOOL
30000202  4607     		mov r7, r0
30000204  F8DD 0000		ldr r0, [sp]
30000208  B002     		add sp, sp, #8
3000020A  4338     		orr r0, r0, r7

(*) BOOL
3000020C  F8DF 766C		ldr r7, [pc, #+1644] ; 0x2403D74C
30000210  783F     		ldrb r7, [r7]
30000212  4038     		and r0, r0, r7

#11			ANDN		E_STOP_FAULT {R:1$119}
(*) BOOL
30000214  F8DF 75CC		ldr r7, [pc, #+1484] ; 0x24002BF9
30000218  783F     		ldrb r7, [r7]
3000021A  2F00     		cmp r7, #0
3000021C  BF08 2701		eqmov r7, #1
30000220  BF18 2700		nemov r7, #0
30000224  4038     		and r0, r0, r7

#12			AND		STOP {R:1$98}
(*) BOOL
30000226  F8DF 764C		ldr r7, [pc, #+1612] ; 0x2403D748
3000022A  783F     		ldrb r7, [r7]
3000022C  4038     		and r0, r0, r7

#13			AND		PRESSURE_SENSOR {R:1$108}
(*) BOOL
3000022E  F8DF 7650		ldr r7, [pc, #+1616] ; 0x2403D74E
30000232  783F     		ldrb r7, [r7]
30000234  4038     		and r0, r0, r7

#14			ANDN		LOW_OIL_FAULT {R:1$77}
(*) BOOL
30000236  F8DF 7574		ldr r7, [pc, #+1396] ; 0x24002BC6
3000023A  783F     		ldrb r7, [r7]
3000023C  2F00     		cmp r7, #0
3000023E  BF08 2701		eqmov r7, #1
30000242  BF18 2700		nemov r7, #0
30000246  4038     		and r0, r0, r7

#15			ANDN		MOTOR_OL_FAULT {R:1$91}
(*) BOOL
30000248  F8DF 7568		ldr r7, [pc, #+1384] ; 0x24002BCC
3000024C  783F     		ldrb r7, [r7]
3000024E  2F00     		cmp r7, #0
30000250  BF08 2701		eqmov r7, #1
30000254  BF18 2700		nemov r7, #0
30000258  4038     		and r0, r0, r7

#16			AND		MOTOR_TEMP_FAULT {R:1$92}
(*) BOOL
3000025A  F8DF 755C		ldr r7, [pc, #+1372] ; 0x24002BCD
3000025E  783F     		ldrb r7, [r7]
30000260  4038     		and r0, r0, r7

#17			ST		MOTOR {R:1$1}
(*) BOOL
30000262  F8DF 7630		ldr r7, [pc, #+1584] ; 0x2403D759
30000266  7038     		strb r0, [r7]

#18		 
#19			(* Network 2 *)
#20			LD		START {R:2$0}
(*) UNDEF
30000268  F8DF 760C		ldr r7, [pc, #+1548] ; 0x2403D74A
3000026C  7838     		ldrb r0, [r7]

#21			ST		ACD_STARTER.IN {R:2$4}
(*) BOOL
3000026E  F8DF 75C8		ldr r7, [pc, #+1480] ; 0x24002C68
30000272  7038     		strb r0, [r7]

#22			MOVE		3000,ACD_STARTER.PT {R:2$4}
(*) BOOL
30000274  F8DF 7520		ldr r7, [pc, #+1312] ; 0xBB8
30000278  4638     		mov r0, r7
3000027A  F8DF 75C0		ldr r7, [pc, #+1472] ; 0x24002C6C
3000027E  6038     		str r0, [r7]

#23			CAL		ACD_STARTER {R:2$4}
(*) UDINT
30000280  E92D 0021		stmdb sp!, { r0, r5 }
30000284  F8DF 55AC		ldr r5, [pc, #+1452] ; 0x24002C64
30000288  F8DF 4618		ldr r4, [pc, #+1560] ; 0x300000C8
3000028C  F044 0401		orr r4, r4, #1
30000290  47A0     		blx r4
30000292  E8BD 0021		ldmia sp!, { r0, r5 }

#24			LD		ACD_STARTER.Q {R:2$4}
(*) UNDEF
30000296  F8DF 75A8		ldr r7, [pc, #+1448] ; 0x24002C70
3000029A  7838     		ldrb r0, [r7]

#25			S		ACD {R:2$1}
(*) BOOL
3000029C  2800     		cmp r0, #0
3000029E  D009     		beq #0x000012
300002A0  B082     		sub sp, sp, #8
300002A2  F8CD 0000		str r0, [sp]
300002A6  2001     		mov r0, #1
300002A8  F8DF 75EC		ldr r7, [pc, #+1516] ; 0x2403D75A
300002AC  7038     		strb r0, [r7]
300002AE  F8DD 0000		ldr r0, [sp]
300002B2  B002     		add sp, sp, #8

#26			S		CLAPPER {R:2$6}
(*) BOOL
300002B4  2800     		cmp r0, #0
300002B6  D009     		beq #0x000012
300002B8  B082     		sub sp, sp, #8
300002BA  F8CD 0000		str r0, [sp]
300002BE  2001     		mov r0, #1
300002C0  F8DF 7590		ldr r7, [pc, #+1424] ; 0x24002CA0
300002C4  7038     		strb r0, [r7]
300002C6  F8DD 0000		ldr r0, [sp]
300002CA  B002     		add sp, sp, #8

#27		 
#28			(* Network 3 *)
#29			LDN		STOP {R:3$0}
(*) UNDEF
300002CC  F8DF 75A4		ldr r7, [pc, #+1444] ; 0x2403D748
300002D0  7838     		ldrb r0, [r7]
300002D2  2800     		cmp r0, #0
300002D4  BF08 2001		eqmov r0, #1
300002D8  BF18 2000		nemov r0, #0

#30			R		CLAPPER {R:3$1}
(*) BOOL
300002DC  2800     		cmp r0, #0
300002DE  D009     		beq #0x000012
300002E0  B082     		sub sp, sp, #8
300002E2  F8CD 0000		str r0, [sp]
300002E6  2000     		mov r0, #0
300002E8  F8DF 7568		ldr r7, [pc, #+1384] ; 0x24002CA0
300002EC  7038     		strb r0, [r7]
300002EE  F8DD 0000		ldr r0, [sp]
300002F2  B002     		add sp, sp, #8

#31		 
#32			(* Network 4 *)
#33		Condensate:
#34			LD		MOTOR {R:4$178}
(*) UNDEF
300002F4  F8DF 759C		ldr r7, [pc, #+1436] ; 0x2403D759
300002F8  7838     		ldrb r0, [r7]

#35			AND		ACD {R:4$179}
(*) BOOL
300002FA  F8DF 759C		ldr r7, [pc, #+1436] ; 0x2403D75A
300002FE  783F     		ldrb r7, [r7]
30000300  4038     		and r0, r0, r7

#36			ST		ACD_CYCLE_START.IN {R:4$119}
(*) BOOL
30000302  F8DF 74C0		ldr r7, [pc, #+1216] ; 0x24002BD4
30000306  7038     		strb r0, [r7]

#37			MOVE		ACD_CYCLE,ACD_CYCLE_START.PT {R:4$119}
(*) BOOL
30000308  F8DF 749C		ldr r7, [pc, #+1180] ; 0xDBBA0
3000030C  4638     		mov r0, r7
3000030E  F8DF 74B8		ldr r7, [pc, #+1208] ; 0x24002BD8
30000312  6038     		str r0, [r7]

#38			CAL		ACD_CYCLE_START {R:4$119}
(*) UDINT
30000314  E92D 0021		stmdb sp!, { r0, r5 }
30000318  F8DF 54A4		ldr r5, [pc, #+1188] ; 0x24002BD0
3000031C  F8DF 4588		ldr r4, [pc, #+1416] ; 0x3000014C
30000320  F044 0401		orr r4, r4, #1
30000324  47A0     		blx r4
30000326  E8BD 0021		ldmia sp!, { r0, r5 }

#39			LD		ACD_CYCLE_START.Q {R:4$119}
(*) UNDEF
3000032A  F8DF 74A0		ldr r7, [pc, #+1184] ; 0x24002BDC
3000032E  7838     		ldrb r0, [r7]

#40			R		ACD {R:4$54}
(*) BOOL
30000330  2800     		cmp r0, #0
30000332  D009     		beq #0x000012
30000334  B082     		sub sp, sp, #8
30000336  F8CD 0000		str r0, [sp]
3000033A  2000     		mov r0, #0
3000033C  F8DF 7558		ldr r7, [pc, #+1368] ; 0x2403D75A
30000340  7038     		strb r0, [r7]
30000342  F8DD 0000		ldr r0, [sp]
30000346  B002     		add sp, sp, #8

#41		 
#42			(* Network 5 *)
#43		Condensate_Vent:
#44			LD		MOTOR {R:5$175}
(*) UNDEF
30000348  F8DF 7548		ldr r7, [pc, #+1352] ; 0x2403D759
3000034C  7838     		ldrb r0, [r7]

#45			ST		START_PAUSE.IN {R:5$179}
(*) BOOL
3000034E  F8DF 74F8		ldr r7, [pc, #+1272] ; 0x24002C7C
30000352  7038     		strb r0, [r7]

#46			MOVE		5000,START_PAUSE.PT {R:5$179}
(*) BOOL
30000354  F8DF 7444		ldr r7, [pc, #+1092] ; 0x1388
30000358  4638     		mov r0, r7
3000035A  F8DF 74F0		ldr r7, [pc, #+1264] ; 0x24002C80
3000035E  6038     		str r0, [r7]

#47			CAL		START_PAUSE {R:5$179}
(*) UDINT
30000360  E92D 0021		stmdb sp!, { r0, r5 }
30000364  F8DF 54DC		ldr r5, [pc, #+1244] ; 0x24002C78
30000368  F8DF 453C		ldr r4, [pc, #+1340] ; 0x3000014C
3000036C  F044 0401		orr r4, r4, #1
30000370  47A0     		blx r4
30000372  E8BD 0021		ldmia sp!, { r0, r5 }

#48			LD		START_PAUSE.Q {R:5$179}
(*) UNDEF
30000376  F8DF 74D8		ldr r7, [pc, #+1240] ; 0x24002C84
3000037A  7838     		ldrb r0, [r7]

#49			ANDN		ACD {R:5$176}
(*) BOOL
3000037C  F8DF 7518		ldr r7, [pc, #+1304] ; 0x2403D75A
30000380  783F     		ldrb r7, [r7]
30000382  2F00     		cmp r7, #0
30000384  BF08 2701		eqmov r7, #1
30000388  BF18 2700		nemov r7, #0
3000038C  4038     		and r0, r0, r7

#50			ST		ACD_VENT_OPEN.IN {R:5$135}
(*) BOOL
3000038E  F8DF 7444		ldr r7, [pc, #+1092] ; 0x24002BE8
30000392  7038     		strb r0, [r7]

#51			MOVE		ACD_OPEN,ACD_VENT_OPEN.PT {R:5$135}
(*) BOOL
30000394  F8DF 740C		ldr r7, [pc, #+1036] ; 0x7530
30000398  4638     		mov r0, r7
3000039A  F8DF 743C		ldr r7, [pc, #+1084] ; 0x24002BEC
3000039E  6038     		str r0, [r7]

#52			CAL		ACD_VENT_OPEN {R:5$135}
(*) UDINT
300003A0  E92D 0021		stmdb sp!, { r0, r5 }
300003A4  F8DF 5428		ldr r5, [pc, #+1064] ; 0x24002BE4
300003A8  F8DF 44FC		ldr r4, [pc, #+1276] ; 0x3000014C
300003AC  F044 0401		orr r4, r4, #1
300003B0  47A0     		blx r4
300003B2  E8BD 0021		ldmia sp!, { r0, r5 }

#53			LD		ACD_VENT_OPEN.Q {R:5$135}
(*) UNDEF
300003B6  F8DF 7424		ldr r7, [pc, #+1060] ; 0x24002BF0
300003BA  7838     		ldrb r0, [r7]

#54			S		ACD {R:5$62}
(*) BOOL
300003BC  2800     		cmp r0, #0
300003BE  D009     		beq #0x000012
300003C0  B082     		sub sp, sp, #8
300003C2  F8CD 0000		str r0, [sp]
300003C6  2001     		mov r0, #1
300003C8  F8DF 74CC		ldr r7, [pc, #+1228] ; 0x2403D75A
300003CC  7038     		strb r0, [r7]
300003CE  F8DD 0000		ldr r0, [sp]
300003D2  B002     		add sp, sp, #8

#55		 
#56			(* Network 6 *)
#57		Motor_Overload:
#58			LD		MOTOR_OL {R:6$19}
(*) UNDEF
300003D4  F8DF 74B4		ldr r7, [pc, #+1204] ; 0x2403D754
300003D8  7838     		ldrb r0, [r7]

#59			JMPCN	$$LAB$1
(-) BOOL
300003DA  2800     		cmp r0, #0
300003DC  D005     		beq #10 ; 0x300003EA


#60			LD		300 {R:6$89}
(*) UNDEF
300003E0  F44F 7096		mov r0, #300 ; 300

#61			ST		BLINK_RATE {R:6$88}
(*) UINT
300003E4  F8DF 73D4		ldr r7, [pc, #+980] ; 0x24002BCE
300003E8  8038     		strh r0, [r7]

#62		$$LAB$1:
#63			LD		MOTOR_OL
(*) UNDEF
300003EA  F8DF 74A0		ldr r7, [pc, #+1184] ; 0x2403D754
300003EE  7838     		ldrb r0, [r7]

#64			S		MOTOR_OL_FAULT {R:6$80}
(*) BOOL
300003F0  2800     		cmp r0, #0
300003F2  D009     		beq #0x000012
300003F4  B082     		sub sp, sp, #8
300003F6  F8CD 0000		str r0, [sp]
300003FA  2001     		mov r0, #1
300003FC  F8DF 73B4		ldr r7, [pc, #+948] ; 0x24002BCC
30000400  7038     		strb r0, [r7]
30000402  F8DD 0000		ldr r0, [sp]
30000406  B002     		add sp, sp, #8

#65		 
#66			(* Network 7 *)
#67		E_Stop:
#68			LDN		EMERGENCY_STOP {R:7$19}
(*) UNDEF
30000408  F8DF 7470		ldr r7, [pc, #+1136] ; 0x2403D74C
3000040C  7838     		ldrb r0, [r7]
3000040E  2800     		cmp r0, #0
30000410  BF08 2001		eqmov r0, #1
30000414  BF18 2000		nemov r0, #0

#69			ST		$$VAR$1
(*) BOOL
30000418  F8DF 73C4		ldr r7, [pc, #+964] ; 0x24002BF8
3000041C  7038     		strb r0, [r7]

#70			JMPCN	$$LAB$2
(-) BOOL
3000041E  2800     		cmp r0, #0
30000420  D006     		beq #12 ; 0x30000430


#71			LD		10000 {R:7$89}
(*) UNDEF
30000424  F8DF 7378		ldr r7, [pc, #+888] ; 0x2710
30000428  4638     		mov r0, r7

#72			ST		BLINK_RATE {R:7$88}
(*) UINT
3000042A  F8DF 7390		ldr r7, [pc, #+912] ; 0x24002BCE
3000042E  8038     		strh r0, [r7]

#73		$$LAB$2:
#74			LD		$$VAR$1
(*) UNDEF
30000430  F8DF 73AC		ldr r7, [pc, #+940] ; 0x24002BF8
30000434  7838     		ldrb r0, [r7]

#75			S		E_STOP_FAULT {R:7$90}
(*) BOOL
30000436  2800     		cmp r0, #0
30000438  D009     		beq #0x000012
3000043A  B082     		sub sp, sp, #8
3000043C  F8CD 0000		str r0, [sp]
30000440  2001     		mov r0, #1
30000442  F8DF 73A0		ldr r7, [pc, #+928] ; 0x24002BF9
30000446  7038     		strb r0, [r7]
30000448  F8DD 0000		ldr r0, [sp]
3000044C  B002     		add sp, sp, #8

#76		 
#77			(* Network 8 *)
#78		Motor_Temp:
#79			LDN		TEMP_SENSOR {R:8$19}
(*) UNDEF
3000044E  F8DF 7438		ldr r7, [pc, #+1080] ; 0x2403D752
30000452  7838     		ldrb r0, [r7]
30000454  2800     		cmp r0, #0
30000456  BF08 2001		eqmov r0, #1
3000045A  BF18 2000		nemov r0, #0

#80			ST		$$VAR$1
(*) BOOL
3000045E  F8DF 7380		ldr r7, [pc, #+896] ; 0x24002BF8
30000462  7038     		strb r0, [r7]

#81			JMPCN	$$LAB$3
(-) BOOL
30000464  2800     		cmp r0, #0
30000466  D005     		beq #10 ; 0x30000474


#82			LD		2000 {R:8$89}
(*) UNDEF
3000046A  F44F 60FA		mov r0, #2000 ; 2000

#83			ST		BLINK_RATE {R:8$88}
(*) UINT
3000046E  F8DF 734C		ldr r7, [pc, #+844] ; 0x24002BCE
30000472  8038     		strh r0, [r7]

#84		$$LAB$3:
#85			LD		$$VAR$1
(*) UNDEF
30000474  F8DF 7368		ldr r7, [pc, #+872] ; 0x24002BF8
30000478  7838     		ldrb r0, [r7]

#86			S		MOTOR_TEMP_FAULT {R:8$80}
(*) BOOL
3000047A  2800     		cmp r0, #0
3000047C  D009     		beq #0x000012
3000047E  B082     		sub sp, sp, #8
30000480  F8CD 0000		str r0, [sp]
30000484  2001     		mov r0, #1
30000486  F8DF 7330		ldr r7, [pc, #+816] ; 0x24002BCD
3000048A  7038     		strb r0, [r7]
3000048C  F8DD 0000		ldr r0, [sp]
30000490  B002     		add sp, sp, #8

#87		 
#88			(* Network 9 *)
#89		Oil_Monitor:
#90			LD		MOTOR {R:9$21}
(*) UNDEF
30000492  F8DF 7400		ldr r7, [pc, #+1024] ; 0x2403D759
30000496  7838     		ldrb r0, [r7]

#91			ST		OIL_PRES_DELAY.IN {R:9$59}
(*) BOOL
30000498  F8DF 7358		ldr r7, [pc, #+856] ; 0x24002C00
3000049C  7038     		strb r0, [r7]

#92			MOVE		5000,OIL_PRES_DELAY.PT {R:9$59}
(*) BOOL
3000049E  F8DF 72FC		ldr r7, [pc, #+764] ; 0x1388
300004A2  4638     		mov r0, r7
300004A4  F8DF 7350		ldr r7, [pc, #+848] ; 0x24002C04
300004A8  6038     		str r0, [r7]

#93			CAL		OIL_PRES_DELAY {R:9$59}
(*) UDINT
300004AA  E92D 0021		stmdb sp!, { r0, r5 }
300004AE  F8DF 5340		ldr r5, [pc, #+832] ; 0x24002BFC
300004B2  F8DF 43F4		ldr r4, [pc, #+1012] ; 0x3000014C
300004B6  F044 0401		orr r4, r4, #1
300004BA  47A0     		blx r4
300004BC  E8BD 0021		ldmia sp!, { r0, r5 }

#94			LD		OIL_PRES_DELAY.Q {R:9$59}
(*) UNDEF
300004C0  F8DF 7338		ldr r7, [pc, #+824] ; 0x24002C08
300004C4  7838     		ldrb r0, [r7]

#95			AND		LOW_OIL {R:9$19}
(*) BOOL
300004C6  F8DF 73BC		ldr r7, [pc, #+956] ; 0x2403D750
300004CA  783F     		ldrb r7, [r7]
300004CC  4038     		and r0, r0, r7

#96			ST		$$VAR$1
(*) BOOL
300004CE  F8DF 7310		ldr r7, [pc, #+784] ; 0x24002BF8
300004D2  7038     		strb r0, [r7]

#97			JMPCN	$$LAB$4
(-) BOOL
300004D4  2800     		cmp r0, #0
300004D6  D005     		beq #10 ; 0x300004E4


#98			LD		1000 {R:9$82}
(*) UNDEF
300004DA  F44F 707A		mov r0, #1000 ; 1000

#99			ST		BLINK_RATE {R:9$83}
(*) UINT
300004DE  F8DF 72DC		ldr r7, [pc, #+732] ; 0x24002BCE
300004E2  8038     		strh r0, [r7]

#100		$$LAB$4:
#101			LD		$$VAR$1
(*) UNDEF
300004E4  F8DF 72F8		ldr r7, [pc, #+760] ; 0x24002BF8
300004E8  7838     		ldrb r0, [r7]

#102			S		LOW_OIL_FAULT {R:9$77}
(*) BOOL
300004EA  2800     		cmp r0, #0
300004EC  D009     		beq #0x000012
300004EE  B082     		sub sp, sp, #8
300004F0  F8CD 0000		str r0, [sp]
300004F4  2001     		mov r0, #1
300004F6  F8DF 72B4		ldr r7, [pc, #+692] ; 0x24002BC6
300004FA  7038     		strb r0, [r7]
300004FC  F8DD 0000		ldr r0, [sp]
30000500  B002     		add sp, sp, #8

#103		 
#104			(* Network 10 *)
#105		Manual_Override:
#106			LDN		STOP {R:10$0}
(*) UNDEF
30000502  F8DF 7370		ldr r7, [pc, #+880] ; 0x2403D748
30000506  7838     		ldrb r0, [r7]
30000508  2800     		cmp r0, #0
3000050A  BF08 2001		eqmov r0, #1
3000050E  BF18 2000		nemov r0, #0

#107			OR		USER_BUTTON {R:10$25}
(*) BOOL
30000512  F8DF 737C		ldr r7, [pc, #+892] ; 0x2403D758
30000516  783F     		ldrb r7, [r7]
30000518  4338     		orr r0, r0, r7

#108			ST		SHUTDOWN_RESET.IN {R:10$14}
(*) BOOL
3000051A  F8DF 72E8		ldr r7, [pc, #+744] ; 0x24002C14
3000051E  7038     		strb r0, [r7]

#109			MOVE		2000,SHUTDOWN_RESET.PT {R:10$14}
(*) BOOL
30000520  F44F 60FA		mov r0, #2000 ; 2000
30000524  F8DF 72E0		ldr r7, [pc, #+736] ; 0x24002C18
30000528  6038     		str r0, [r7]

#110			CAL		SHUTDOWN_RESET {R:10$14}
(*) UDINT
3000052A  E92D 0021		stmdb sp!, { r0, r5 }
3000052E  F8DF 52D0		ldr r5, [pc, #+720] ; 0x24002C10
30000532  F8DF 4374		ldr r4, [pc, #+884] ; 0x3000014C
30000536  F044 0401		orr r4, r4, #1
3000053A  47A0     		blx r4
3000053C  E8BD 0021		ldmia sp!, { r0, r5 }

#111			LD		SHUTDOWN_RESET.Q {R:10$14}
(*) UNDEF
30000540  F8DF 72C8		ldr r7, [pc, #+712] ; 0x24002C1C
30000544  7838     		ldrb r0, [r7]

#112			R		WARN_LED {R:10$2}
(*) BOOL
30000546  2800     		cmp r0, #0
30000548  D009     		beq #0x000012
3000054A  B082     		sub sp, sp, #8
3000054C  F8CD 0000		str r0, [sp]
30000550  2000     		mov r0, #0
30000552  F8DF 730C		ldr r7, [pc, #+780] ; 0x2403D742
30000556  7038     		strb r0, [r7]
30000558  F8DD 0000		ldr r0, [sp]
3000055C  B002     		add sp, sp, #8

#113			R		WARN_LIGHT {R:10$3}
(*) BOOL
3000055E  2800     		cmp r0, #0
30000560  D009     		beq #0x000012
30000562  B082     		sub sp, sp, #8
30000564  F8CD 0000		str r0, [sp]
30000568  2000     		mov r0, #0
3000056A  F8DF 7330		ldr r7, [pc, #+816] ; 0x2403D75B
3000056E  7038     		strb r0, [r7]
30000570  F8DD 0000		ldr r0, [sp]
30000574  B002     		add sp, sp, #8

#114			R		MOTOR_OL_FAULT {R:10$6}
(*) BOOL
30000576  2800     		cmp r0, #0
30000578  D009     		beq #0x000012
3000057A  B082     		sub sp, sp, #8
3000057C  F8CD 0000		str r0, [sp]
30000580  2000     		mov r0, #0
30000582  F8DF 7230		ldr r7, [pc, #+560] ; 0x24002BCC
30000586  7038     		strb r0, [r7]
30000588  F8DD 0000		ldr r0, [sp]
3000058C  B002     		add sp, sp, #8

#115			R		LOW_OIL_FAULT {R:10$7}
(*) BOOL
3000058E  2800     		cmp r0, #0
30000590  D009     		beq #0x000012
30000592  B082     		sub sp, sp, #8
30000594  F8CD 0000		str r0, [sp]
30000598  2000     		mov r0, #0
3000059A  F8DF 7210		ldr r7, [pc, #+528] ; 0x24002BC6
3000059E  7038     		strb r0, [r7]
300005A0  F8DD 0000		ldr r0, [sp]
300005A4  B002     		add sp, sp, #8

#116			S		MOTOR_TEMP_FAULT {R:10$9}
(*) BOOL
300005A6  2800     		cmp r0, #0
300005A8  D009     		beq #0x000012
300005AA  B082     		sub sp, sp, #8
300005AC  F8CD 0000		str r0, [sp]
300005B0  2001     		mov r0, #1
300005B2  F8DF 7204		ldr r7, [pc, #+516] ; 0x24002BCD
300005B6  7038     		strb r0, [r7]
300005B8  F8DD 0000		ldr r0, [sp]
300005BC  B002     		add sp, sp, #8

#117			R		E_STOP_FAULT {R:10$10}
(*) BOOL
300005BE  2800     		cmp r0, #0
300005C0  D009     		beq #0x000012
300005C2  B082     		sub sp, sp, #8
300005C4  F8CD 0000		str r0, [sp]
300005C8  2000     		mov r0, #0
300005CA  F8DF 7218		ldr r7, [pc, #+536] ; 0x24002BF9
300005CE  7038     		strb r0, [r7]
300005D0  F8DD 0000		ldr r0, [sp]
300005D4  B002     		add sp, sp, #8

#118			R		FAULT_LED {R:10$11}
(*) BOOL
300005D6  2800     		cmp r0, #0
300005D8  D009     		beq #0x000012
300005DA  B082     		sub sp, sp, #8
300005DC  F8CD 0000		str r0, [sp]
300005E0  2000     		mov r0, #0
300005E2  F8DF 7284		ldr r7, [pc, #+644] ; 0x2403D744
300005E6  7038     		strb r0, [r7]
300005E8  F8DD 0000		ldr r0, [sp]
300005EC  B002     		add sp, sp, #8

#119		 
#120			(* Network 11 *)
#121		At_Pressure_Standby:
#122			LDN		PRESSURE_SENSOR {R:11$2}
(*) UNDEF
300005EE  F8DF 7290		ldr r7, [pc, #+656] ; 0x2403D74E
300005F2  7838     		ldrb r0, [r7]
300005F4  2800     		cmp r0, #0
300005F6  BF08 2001		eqmov r0, #1
300005FA  BF18 2000		nemov r0, #0

#123			ST		MOTOR_STANDBY {R:11$1}
(*) BOOL
300005FE  F8DF 71B0		ldr r7, [pc, #+432] ; 0x24002BC7
30000602  7038     		strb r0, [r7]

#124		 
#125			(* Network 12 *)
#126		Fault_Lighting:
#127			LD		LOW_OIL_FAULT {R:12$0}
(*) UNDEF
30000604  F8DF 71A4		ldr r7, [pc, #+420] ; 0x24002BC6
30000608  7838     		ldrb r0, [r7]

#128			OR		MOTOR_OL_FAULT {R:12$2}
(*) BOOL
3000060A  F8DF 71A8		ldr r7, [pc, #+424] ; 0x24002BCC
3000060E  783F     		ldrb r7, [r7]
30000610  4338     		orr r0, r0, r7

#129			ORN		MOTOR_TEMP_FAULT {R:12$4}
(*) BOOL
30000612  F8DF 71A4		ldr r7, [pc, #+420] ; 0x24002BCD
30000616  783F     		ldrb r7, [r7]
30000618  2F00     		cmp r7, #0
3000061A  BF08 2701		eqmov r7, #1
3000061E  BF18 2700		nemov r7, #0
30000622  4338     		orr r0, r0, r7

#130			ORN		EMERGENCY_STOP {R:12$40}
(*) BOOL
30000624  F8DF 7254		ldr r7, [pc, #+596] ; 0x2403D74C
30000628  783F     		ldrb r7, [r7]
3000062A  2F00     		cmp r7, #0
3000062C  BF08 2701		eqmov r7, #1
30000630  BF18 2700		nemov r7, #0
30000634  4338     		orr r0, r0, r7

#131			ST		WARN_LED {R:12$1}
(*) BOOL
30000636  F8DF 7228		ldr r7, [pc, #+552] ; 0x2403D742
3000063A  7038     		strb r0, [r7]

#132			ST		WARN_LIGHT {R:12$7}
(*) BOOL
3000063C  F8DF 725C		ldr r7, [pc, #+604] ; 0x2403D75B
30000640  7038     		strb r0, [r7]

#133			ST		FAULT_MODE {R:12$47}
(*) BOOL
30000642  F8DF 71A8		ldr r7, [pc, #+424] ; 0x24002BFB
30000646  7038     		strb r0, [r7]

#134		 
#135			(* Network 13 *)
#136			LD		WARN_LIGHT {R:13$0}
(*) UNDEF
30000648  F8DF 7250		ldr r7, [pc, #+592] ; 0x2403D75B
3000064C  7838     		ldrb r0, [r7]

#137			ST		WARN_LED {R:13$1}
(*) BOOL
3000064E  F8DF 7210		ldr r7, [pc, #+528] ; 0x2403D742
30000652  7038     		strb r0, [r7]

#138		 
#139			(* Network 14 *)
#140			LD		WARN_BUZZ {R:14$0}
(*) UNDEF
30000654  F8DF 7248		ldr r7, [pc, #+584] ; 0x2403D75C
30000658  7838     		ldrb r0, [r7]

#141			ST		BUZZ_LED {R:14$1}
(*) BOOL
3000065A  F8DF 7208		ldr r7, [pc, #+520] ; 0x2403D743
3000065E  7038     		strb r0, [r7]

#142		 
#143			(* Network 15 *)
#144			LD		MOTOR {R:15$0}
(*) UNDEF
30000660  F8DF 7230		ldr r7, [pc, #+560] ; 0x2403D759
30000664  7838     		ldrb r0, [r7]

#145			ST		MOTOR_LED {R:15$1}
(*) BOOL
30000666  F8DF 71F0		ldr r7, [pc, #+496] ; 0x2403D740
3000066A  7038     		strb r0, [r7]

#146			ST		OK_LED {R:15$2}
(*) BOOL
3000066C  F8DF 71FC		ldr r7, [pc, #+508] ; 0x2403D745
30000670  7038     		strb r0, [r7]

#147		 
#148			(* Network 16 *)
#149			LD		ACD {R:16$0}
(*) UNDEF
30000672  F8DF 7224		ldr r7, [pc, #+548] ; 0x2403D75A
30000676  7838     		ldrb r0, [r7]

#150			ST		ACD_LED {R:16$1}
(*) BOOL
30000678  F8DF 71E0		ldr r7, [pc, #+480] ; 0x2403D741
3000067C  7038     		strb r0, [r7]

#151		 
#152			(* Network 17 *)
#153			LD		MOTOR_STANDBY {R:17$0}
(*) UNDEF
3000067E  F8DF 7130		ldr r7, [pc, #+304] ; 0x24002BC7
30000682  7838     		ldrb r0, [r7]

#154			ST		STANDBY_LED {R:17$1}
(*) BOOL
30000684  F8DF 71E8		ldr r7, [pc, #+488] ; 0x2403D746
30000688  7038     		strb r0, [r7]

#155		 
#156			(* Network 18 *)
#157		Fault_Code_On:
#158			LD		FAULT_MODE {R:18$15}
(*) UNDEF
3000068A  F8DF 7160		ldr r7, [pc, #+352] ; 0x24002BFB
3000068E  7838     		ldrb r0, [r7]

#159			AND		FLASH {R:18$0}
(*) BOOL
30000690  F8DF 7154		ldr r7, [pc, #+340] ; 0x24002BFA
30000694  783F     		ldrb r7, [r7]
30000696  4038     		and r0, r0, r7

#160			ST		FLASHER.IN {R:18$8}
(*) BOOL
30000698  F8DF 7178		ldr r7, [pc, #+376] ; 0x24002C28
3000069C  7038     		strb r0, [r7]

#161			MOVE		BLINK_RATE,FLASHER.PT {R:18$8}
(*) BOOL
3000069E  F8DF 711C		ldr r7, [pc, #+284] ; 0x24002BCE
300006A2  8838     		ldrh r0, [r7]
300006A4  F8DF 7170		ldr r7, [pc, #+368] ; 0x24002C2C
300006A8  6038     		str r0, [r7]

#162			CAL		FLASHER {R:18$8}
(*) UDINT
300006AA  E92D 0021		stmdb sp!, { r0, r5 }
300006AE  F8DF 5160		ldr r5, [pc, #+352] ; 0x24002C24
300006B2  F8DF 41F4		ldr r4, [pc, #+500] ; 0x3000014C
300006B6  F044 0401		orr r4, r4, #1
300006BA  47A0     		blx r4
300006BC  E8BD 0021		ldmia sp!, { r0, r5 }

#163			LD		FLASHER.Q {R:18$8}
(*) UNDEF
300006C0  F8DF 7158		ldr r7, [pc, #+344] ; 0x24002C30
300006C4  7838     		ldrb r0, [r7]

#164			ST		FLASH {R:18$1}
(*) BOOL
300006C6  F8DF 7120		ldr r7, [pc, #+288] ; 0x24002BFA
300006CA  7038     		strb r0, [r7]

#165			R		FAULT_LED {R:18$14}
(*) BOOL
300006CC  2800     		cmp r0, #0
300006CE  D009     		beq #0x000012
300006D0  B082     		sub sp, sp, #8
300006D2  F8CD 0000		str r0, [sp]
300006D6  2000     		mov r0, #0
300006D8  F8DF 718C		ldr r7, [pc, #+396] ; 0x2403D744
300006DC  7038     		strb r0, [r7]
300006DE  F8DD 0000		ldr r0, [sp]
300006E2  B002     		add sp, sp, #8

#166		 
#167			(* Network 19 *)
#168		Fault_Code_Off:
#169			LD		FAULT_MODE {R:19$37}
(*) UNDEF
300006E4  F8DF 7104		ldr r7, [pc, #+260] ; 0x24002BFB
300006E8  7838     		ldrb r0, [r7]

#170			ANDN		FLASH {R:19$9}
(*) BOOL
300006EA  F8DF 70FC		ldr r7, [pc, #+252] ; 0x24002BFA
300006EE  783F     		ldrb r7, [r7]
300006F0  2F00     		cmp r7, #0
300006F2  BF08 2701		eqmov r7, #1
300006F6  BF18 2700		nemov r7, #0
300006FA  4038     		and r0, r0, r7

#171			ST		$$VAR$1
(*) BOOL
300006FC  F8DF 70E0		ldr r7, [pc, #+224] ; 0x24002BF8
30000700  7038     		strb r0, [r7]

#172			JMPCN	$$LAB$5
(-) BOOL
30000702  2800     		cmp r0, #0
30000704  D017     		beq #46 ; 0x30000736


#173			LD		BLINK_RATE {R:19$41}
(*) UNDEF
30000708  F8DF 70B0		ldr r7, [pc, #+176] ; 0x24002BCE
3000070C  8838     		ldrh r0, [r7]

#174			DIV	10 {R:19$39}
(*) UINT
3000070E  270A     		mov r7, #10 ; 10
30000710  B082     		sub sp, sp, #8
30000712  F8CD 1000		str r1, [sp]
30000716  4639     		mov r1, r7
30000718  FBB0 F0F1		udiv r0, r0, r1
3000071C  F8DD 1000		ldr r1, [sp]
30000720  B002     		add sp, sp, #8

#175			ST		BLINKOFF_RATE {R:19$43}
(*) UINT
30000722  F8DF 710C		ldr r7, [pc, #+268] ; 0x24002C4E
30000726  B082     		sub sp, sp, #8
30000728  F8CD 0000		str r0, [sp]
3000072C  B200     		sxth r0, r0
3000072E  8038     		strh r0, [r7]
30000730  F8DD 0000		ldr r0, [sp]
30000734  B002     		add sp, sp, #8

#176		$$LAB$5:
#177			LD		$$VAR$1
(*) UNDEF
30000736  F8DF 70A8		ldr r7, [pc, #+168] ; 0x24002BF8
3000073A  7838     		ldrb r0, [r7]

#178			ST		FLASHER_OFF.IN {R:19$27}
(*) BOOL
3000073C  F8DF 70E4		ldr r7, [pc, #+228] ; 0x24002C3C
30000740  7038     		strb r0, [r7]

#179			MOVE		BLINKOFF_RATE,FLASHER_OFF.PT {R:19$27}
(*) BOOL
30000742  F8DF 70EC		ldr r7, [pc, #+236] ; 0x24002C4E
30000746  F9B7 0000		ldrsh r0, [r7]
3000074A  F8DF 70DC		ldr r7, [pc, #+220] ; 0x24002C40
3000074E  6038     		str r0, [r7]

#180			CAL		FLASHER_OFF {R:19$27}
(*) UDINT
30000750  E92D 0021		stmdb sp!, { r0, r5 }
30000754  F8DF 50C8		ldr r5, [pc, #+200] ; 0x24002C38
30000758  F8DF 414C		ldr r4, [pc, #+332] ; 0x3000014C
3000075C  F044 0401		orr r4, r4, #1
30000760  47A0     		blx r4
30000762  E8BD 0021		ldmia sp!, { r0, r5 }

#181			LD		FLASHER_OFF.Q {R:19$27}
(*) UNDEF
30000766  F8DF 70C4		ldr r7, [pc, #+196] ; 0x24002C44
3000076A  7838     		ldrb r0, [r7]

#182			ST		FLASH {R:19$1}
(*) BOOL
3000076C  F8DF 7078		ldr r7, [pc, #+120] ; 0x24002BFA
30000770  7038     		strb r0, [r7]

#183			S		FAULT_LED {R:19$36}
(*) BOOL
30000772  2800     		cmp r0, #0
30000774  D009     		beq #0x000012
30000776  B082     		sub sp, sp, #8
30000778  F8CD 0000		str r0, [sp]
3000077C  2001     		mov r0, #1
3000077E  F8DF 70E8		ldr r7, [pc, #+232] ; 0x2403D744
30000782  7038     		strb r0, [r7]
30000784  F8DD 0000		ldr r0, [sp]
30000788  B002     		add sp, sp, #8

3000078A  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
3000078E  F8DD E000		ldr lr, [sp]
30000792  B002     		add sp, sp, #8

30000794  4770     		bx lr

30000798  00000BB8		; 0x00000BB8
3000079C  00001388		; 0x00001388
300007A0  00002710		; 0x00002710
300007A4  00007530		; 0x00007530
300007A8  000DBBA0		; 0x000DBBA0
300007AC  24002BC6		; 0x24002BC6
300007B0  24002BC7		; 0x24002BC7
300007B4  24002BCC		; 0x24002BCC
300007B8  24002BCD		; 0x24002BCD
300007BC  24002BCE		; 0x24002BCE
300007C0  24002BD0		; 0x24002BD0
300007C4  24002BD4		; 0x24002BD4
300007C8  24002BD8		; 0x24002BD8
300007CC  24002BDC		; 0x24002BDC
300007D0  24002BE4		; 0x24002BE4
300007D4  24002BE8		; 0x24002BE8
300007D8  24002BEC		; 0x24002BEC
300007DC  24002BF0		; 0x24002BF0
300007E0  24002BF8		; 0x24002BF8
300007E4  24002BF9		; 0x24002BF9
300007E8  24002BFA		; 0x24002BFA
300007EC  24002BFB		; 0x24002BFB
300007F0  24002BFC		; 0x24002BFC
300007F4  24002C00		; 0x24002C00
300007F8  24002C04		; 0x24002C04
300007FC  24002C08		; 0x24002C08
30000800  24002C10		; 0x24002C10
30000804  24002C14		; 0x24002C14
30000808  24002C18		; 0x24002C18
3000080C  24002C1C		; 0x24002C1C
30000810  24002C24		; 0x24002C24
30000814  24002C28		; 0x24002C28
30000818  24002C2C		; 0x24002C2C
3000081C  24002C30		; 0x24002C30
30000820  24002C38		; 0x24002C38
30000824  24002C3C		; 0x24002C3C
30000828  24002C40		; 0x24002C40
3000082C  24002C44		; 0x24002C44
30000830  24002C4E		; 0x24002C4E
30000834  24002C64		; 0x24002C64
30000838  24002C68		; 0x24002C68
3000083C  24002C6C		; 0x24002C6C
30000840  24002C70		; 0x24002C70
30000844  24002C78		; 0x24002C78
30000848  24002C7C		; 0x24002C7C
3000084C  24002C80		; 0x24002C80
30000850  24002C84		; 0x24002C84
30000854  24002CA0		; 0x24002CA0
30000858  FFFFFFFF		; 0x2403D740
3000085C  FFFFFFFF		; 0x2403D741
30000860  FFFFFFFF		; 0x2403D742
30000864  FFFFFFFF		; 0x2403D743
30000868  FFFFFFFF		; 0x2403D744
3000086C  FFFFFFFF		; 0x2403D745
30000870  FFFFFFFF		; 0x2403D746
30000874  FFFFFFFF		; 0x2403D748
30000878  FFFFFFFF		; 0x2403D74A
3000087C  FFFFFFFF		; 0x2403D74C
30000880  FFFFFFFF		; 0x2403D74E
30000884  FFFFFFFF		; 0x2403D750
30000888  FFFFFFFF		; 0x2403D752
3000088C  FFFFFFFF		; 0x2403D754
30000890  FFFFFFFF		; 0x2403D758
30000894  FFFFFFFF		; 0x2403D759
30000898  FFFFFFFF		; 0x2403D75A
3000089C  FFFFFFFF		; 0x2403D75B
300008A0  FFFFFFFF		; 0x2403D75C
300008A4  300000C8		; 0x300000C8
300008A8  3000014C		; 0x3000014C

END_PROGRAM


**************************************************
	Target variable image generation
**************************************************


*** INPUT:
300008AC  4770     		bx lr


*** OUTPUT:
300008AE  4770     		bx lr



**************************************************
	Task Fast init code
**************************************************

300008B0  B082     		sub sp, sp, #8
300008B2  F8CD E000		str lr, [sp]
300008B6  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

300008BA  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
300008BE  F8DD E000		ldr lr, [sp]
300008C2  B002     		add sp, sp, #8

300008C4  4770     		bx lr

**************************************************
	List program: InitParDB
**************************************************

PROGRAM InitParDB

        VAR
warningsKiller : USINT;
dummyCrc32 : UDINT;
	END_VAR

END_PROGRAM

300008D0  B082     		sub sp, sp, #8
300008D2  F8CD E000		str lr, [sp]
300008D6  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

#0		{SRC:InitParDB}
#1		(*$WAITSWITCH$*)
#2		
#3			(* dummyCrc32 := 0; *)
#4			MOVE		0,dummyCrc32	{LNXT:3|5|-1}
(*) UDINT
300008DA  2000     		mov r0, #0 ; 0
300008DC  F8DF 7058		ldr r7, [pc, #+88] ; 0x24002BC8
300008E0  6038     		str r0, [r7]

#5		
#6			(* warningsKiller := sysDBase_SetExtTable( TO_DWORD( 0 ), 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ); *)
#7			LDP0		0	{LNXT:5|3|-1}
(-) UDINT
#8			TO_DWORD	{LNXT:5|3|-1}
(-) USINT
300008E2  2000     		mov r0, #0 ; 0

#9			sysDBase_SetExtTable		0, 0, 0, 0, 0, 0, 0, 0, 0, 0	{LNXT:5|3|-1}
(*) DWORD
300008E4  B088     		sub sp, sp, #32
300008E6  2700     		mov r7, #0 ; 0
300008E8  4639     		mov r1, r7
300008EA  2700     		mov r7, #0 ; 0
300008EC  463A     		mov r2, r7
300008EE  2700     		mov r7, #0 ; 0
300008F0  463B     		mov r3, r7
300008F2  2700     		mov r7, #0 ; 0
300008F4  F8CD 7000		str r7, [sp]
300008F8  2700     		mov r7, #0 ; 0
300008FA  F8CD 7004		str r7, [sp, #+4]
300008FE  2700     		mov r7, #0 ; 0
30000900  F8CD 7008		str r7, [sp, #+8]
30000904  2700     		mov r7, #0 ; 0
30000906  F8CD 700C		str r7, [sp, #+12]
3000090A  2700     		mov r7, #0 ; 0
3000090C  F8CD 7010		str r7, [sp, #+16]
30000910  2700     		mov r7, #0 ; 0
30000912  F8CD 7014		str r7, [sp, #+20]
30000916  2700     		mov r7, #0 ; 0
30000918  F8CD 7018		str r7, [sp, #+24]
3000091C  F8DF 4010		ldr r4, [pc, #+16] ; 0x806BE21
30000920  F044 0401		orr r4, r4, #1
30000924  47A0     		blx r4
30000926  B008     		add sp, sp, #32

#10			ST		warningsKiller	{LNXT:5|3|-1}
(*) USINT
30000928  F8DF 7008		ldr r7, [pc, #+8] ; 0x24002BC5
3000092C  7038     		strb r0, [r7]

3000092E  E005     		b #10

30000930  FFFFFFFF		; 0x0806BE21
30000934  24002BC5		; 0x24002BC5
30000938  24002BC8		; 0x24002BC8

END_PROGRAM
**************************************************
	List program: $$IOConfig
**************************************************

PROGRAM $$IOConfig

        VAR
warningsKiller : BOOL;
	END_VAR

END_PROGRAM

#0		{SRC:$$IOConfig}
#1		(*$WAITSWITCH$*)
#2		
#3			(* warningsKiller := sysCfgAnalogRes(16); *)
#4			LDP0		16	{LNXT:4|7|-1}
(-) UDINT
#5			sysCfgAnalogRes	{LNXT:4|7|-1}
(*) USINT
3000093C  2010     		mov r0, #16 ; 16
3000093E  F8DF 40BC		ldr r4, [pc, #+188] ; 0x8072BD1
30000942  F044 0401		orr r4, r4, #1
30000946  47A0     		blx r4

#6			ST		warningsKiller	{LNXT:4|7|-1}
(*) BOOL
30000948  F8DF 70B8		ldr r7, [pc, #+184] ; 0x24002BC4
3000094C  7038     		strb r0, [r7]

#7		
#8			(* warningsKiller := sysCfgProgInput(0, 0); *)
#9			LDP0		0	{LNXT:7|8|-1}
(-) BOOL
#10			sysCfgProgInput		0	{LNXT:7|8|-1}
(*) USINT
3000094E  2000     		mov r0, #0 ; 0
30000950  2100     		mov r1, #0 ; 0
30000952  F8DF 40AC		ldr r4, [pc, #+172] ; 0x8072BDD
30000956  F044 0401		orr r4, r4, #1
3000095A  47A0     		blx r4

#11			ST		warningsKiller	{LNXT:7|8|-1}
(*) BOOL
3000095C  F8DF 70A4		ldr r7, [pc, #+164] ; 0x24002BC4
30000960  7038     		strb r0, [r7]

#12		
#13			(* warningsKiller := sysCfgProgInput(1, 0); *)
#14			LDP0		1	{LNXT:8|9|-1}
(-) BOOL
#15			sysCfgProgInput		0	{LNXT:8|9|-1}
(*) USINT
30000962  2001     		mov r0, #1 ; 1
30000964  2100     		mov r1, #0 ; 0
30000966  F8DF 4098		ldr r4, [pc, #+152] ; 0x8072BDD
3000096A  F044 0401		orr r4, r4, #1
3000096E  47A0     		blx r4

#16			ST		warningsKiller	{LNXT:8|9|-1}
(*) BOOL
30000970  F8DF 7090		ldr r7, [pc, #+144] ; 0x24002BC4
30000974  7038     		strb r0, [r7]

#17		
#18			(* warningsKiller := sysCfgProgInput(2, 0); *)
#19			LDP0		2	{LNXT:9|10|-1}
(-) BOOL
#20			sysCfgProgInput		0	{LNXT:9|10|-1}
(*) USINT
30000976  2002     		mov r0, #2 ; 2
30000978  2100     		mov r1, #0 ; 0
3000097A  F8DF 4084		ldr r4, [pc, #+132] ; 0x8072BDD
3000097E  F044 0401		orr r4, r4, #1
30000982  47A0     		blx r4

#21			ST		warningsKiller	{LNXT:9|10|-1}
(*) BOOL
30000984  F8DF 707C		ldr r7, [pc, #+124] ; 0x24002BC4
30000988  7038     		strb r0, [r7]

#22		
#23			(* warningsKiller := sysCfgProgInput(3, 0); *)
#24			LDP0		3	{LNXT:10|11|-1}
(-) BOOL
#25			sysCfgProgInput		0	{LNXT:10|11|-1}
(*) USINT
3000098A  2003     		mov r0, #3 ; 3
3000098C  2100     		mov r1, #0 ; 0
3000098E  F8DF 4070		ldr r4, [pc, #+112] ; 0x8072BDD
30000992  F044 0401		orr r4, r4, #1
30000996  47A0     		blx r4

#26			ST		warningsKiller	{LNXT:10|11|-1}
(*) BOOL
30000998  F8DF 7068		ldr r7, [pc, #+104] ; 0x24002BC4
3000099C  7038     		strb r0, [r7]

#27		
#28			(* warningsKiller := sysCfgProgInput(4, 0); *)
#29			LDP0		4	{LNXT:11|12|-1}
(-) BOOL
#30			sysCfgProgInput		0	{LNXT:11|12|-1}
(*) USINT
3000099E  2004     		mov r0, #4 ; 4
300009A0  2100     		mov r1, #0 ; 0
300009A2  F8DF 405C		ldr r4, [pc, #+92] ; 0x8072BDD
300009A6  F044 0401		orr r4, r4, #1
300009AA  47A0     		blx r4

#31			ST		warningsKiller	{LNXT:11|12|-1}
(*) BOOL
300009AC  F8DF 7054		ldr r7, [pc, #+84] ; 0x24002BC4
300009B0  7038     		strb r0, [r7]

#32		
#33			(* warningsKiller := sysCfgProgInput(5, 0); *)
#34			LDP0		5	{LNXT:12|13|-1}
(-) BOOL
#35			sysCfgProgInput		0	{LNXT:12|13|-1}
(*) USINT
300009B2  2005     		mov r0, #5 ; 5
300009B4  2100     		mov r1, #0 ; 0
300009B6  F8DF 4048		ldr r4, [pc, #+72] ; 0x8072BDD
300009BA  F044 0401		orr r4, r4, #1
300009BE  47A0     		blx r4

#36			ST		warningsKiller	{LNXT:12|13|-1}
(*) BOOL
300009C0  F8DF 7040		ldr r7, [pc, #+64] ; 0x24002BC4
300009C4  7038     		strb r0, [r7]

#37		
#38			(* warningsKiller := sysCfgProgInput(6, 0); *)
#39			LDP0		6	{LNXT:13|14|-1}
(-) BOOL
#40			sysCfgProgInput		0	{LNXT:13|14|-1}
(*) USINT
300009C6  2006     		mov r0, #6 ; 6
300009C8  2100     		mov r1, #0 ; 0
300009CA  F8DF 4034		ldr r4, [pc, #+52] ; 0x8072BDD
300009CE  F044 0401		orr r4, r4, #1
300009D2  47A0     		blx r4

#41			ST		warningsKiller	{LNXT:13|14|-1}
(*) BOOL
300009D4  F8DF 702C		ldr r7, [pc, #+44] ; 0x24002BC4
300009D8  7038     		strb r0, [r7]

#42		
#43			(* warningsKiller := sysCfgProgInput(7, 0); *)
#44			LDP0		7	{LNXT:14|4|-1}
(-) BOOL
#45			sysCfgProgInput		0	{LNXT:14|4|-1}
(*) USINT
300009DA  2007     		mov r0, #7 ; 7
300009DC  2100     		mov r1, #0 ; 0
300009DE  F8DF 4020		ldr r4, [pc, #+32] ; 0x8072BDD
300009E2  F044 0401		orr r4, r4, #1
300009E6  47A0     		blx r4

#46			ST		warningsKiller	{LNXT:14|4|-1}
(*) BOOL
300009E8  F8DF 7018		ldr r7, [pc, #+24] ; 0x24002BC4
300009EC  7038     		strb r0, [r7]

300009EE  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
300009F2  F8DD E000		ldr lr, [sp]
300009F6  B002     		add sp, sp, #8

300009F8  4770     		bx lr

300009FC  FFFFFFFF		; 0x08072BD1
30000A00  FFFFFFFF		; 0x08072BDD
30000A04  24002BC4		; 0x24002BC4

END_PROGRAM


**************************************************
	Target variable image generation
**************************************************


*** INPUT:
30000A08  4770     		bx lr


*** OUTPUT:
30000A0A  4770     		bx lr



**************************************************
	Task Init init code
**************************************************

30000A0C  B082     		sub sp, sp, #8
30000A0E  F8CD E000		str lr, [sp]
30000A12  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

30000A16  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
30000A1A  F8DD E000		ldr lr, [sp]
30000A1E  B002     		add sp, sp, #8

30000A20  4770     		bx lr



**************************************************
	Global init code
**************************************************

30000A30  B082     		sub sp, sp, #8
30000A32  F8CD E000		str lr, [sp]
30000A36  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

30000A3A  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
30000A3E  F8DD E000		ldr lr, [sp]
30000A42  B002     		add sp, sp, #8

30000A44  4770     		bx lr



**************************************************
	Global RETAIN init code
**************************************************

30000A46  B082     		sub sp, sp, #8
30000A48  F8CD E000		str lr, [sp]
30000A4C  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

30000A50  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
30000A54  F8DD E000		ldr lr, [sp]
30000A58  B002     		add sp, sp, #8

30000A5A  4770     		bx lr



**************************************************
	Task $$VirtualTables init code
**************************************************

30000A5C  B082     		sub sp, sp, #8
30000A5E  F8CD E000		str lr, [sp]
30000A62  E92D 0FF0		stmdb sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }

30000A66  E8BD 0FF0		ldmia sp!, { r4, r5, r6, r7, r8, r9, r10, r11 }
30000A6A  F8DD E000		ldr lr, [sp]
30000A6E  B002     		add sp, sp, #8

30000A70  4770     		bx lr



********************************************
MEMORY MAP
********************************************

Code area type:          		       main code
Start code area:          		0000000030000000h
End code area:            		0000000030000C94h
Code size:                		00000C94h

Start local data area:    		0000000024002BB8h
End local data area:      		0000000024002CA1h
Local data size:          		000000E9h

Start retentive data area:		00000000240027B8h
End retentive data area:  		00000000240027B8h
Retentive data size:      		00000000h

Start bit data area:      		0000000000000000h
End bit data area:        		0000000000000000h
Bit data size:            		00000000h



********************************************
CODE ID:                                55DDFDF7
DEBUG MEMO ID:                          300058B3
FULL MEMO ID:                           0000C710
********************************************
